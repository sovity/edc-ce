/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiDataSinkHttpDataPushMethod } from './UiDataSinkHttpDataPushMethod';
import {
    UiDataSinkHttpDataPushMethodFromJSON,
    UiDataSinkHttpDataPushMethodFromJSONTyped,
    UiDataSinkHttpDataPushMethodToJSON,
    UiDataSinkHttpDataPushMethodToJSONTyped,
} from './UiDataSinkHttpDataPushMethod';
import type { SecretValue } from './SecretValue';
import {
    SecretValueFromJSON,
    SecretValueFromJSONTyped,
    SecretValueToJSON,
    SecretValueToJSONTyped,
} from './SecretValue';

/**
 * HTTP_DATA type Data Source. This is an HttpData-PUSH data sink. Note that consumption of parameterized data sources is not supported via HttpData-PUSH
 * @export
 * @interface UiDataSinkHttpDataPush
 */
export interface UiDataSinkHttpDataPush {
    /**
     * HTTP Request Method
     * @type {UiDataSinkHttpDataPushMethod}
     * @memberof UiDataSinkHttpDataPush
     */
    method?: UiDataSinkHttpDataPushMethod;
    /**
     * HTTP Request URL.
     * @type {string}
     * @memberof UiDataSinkHttpDataPush
     */
    baseUrl: string;
    /**
     * HTTP Request Query Params / Query String.
     * @type {string}
     * @memberof UiDataSinkHttpDataPush
     */
    queryString?: string;
    /**
     * Auth Header name. The auth header is handled specially by the EDC as its value can be read from a vault.
     * @type {string}
     * @memberof UiDataSinkHttpDataPush
     */
    authHeaderName?: string;
    /**
     * Auth Header value.
     * @type {SecretValue}
     * @memberof UiDataSinkHttpDataPush
     */
    authHeaderValue?: SecretValue;
    /**
     * HTTP Request Headers.
     * @type {{ [key: string]: string; }}
     * @memberof UiDataSinkHttpDataPush
     */
    headers?: { [key: string]: string; };
}



/**
 * Check if a given object implements the UiDataSinkHttpDataPush interface.
 */
export function instanceOfUiDataSinkHttpDataPush(value: any): value is UiDataSinkHttpDataPush {
    if (!('baseUrl' in value) || value['baseUrl'] === undefined) return false;
    return true;
}

export function UiDataSinkHttpDataPushFromJSON(json: any): UiDataSinkHttpDataPush {
    return UiDataSinkHttpDataPushFromJSONTyped(json, false);
}

export function UiDataSinkHttpDataPushFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiDataSinkHttpDataPush {
    if (json == null) {
        return json;
    }
    return {
        
        'method': json['method'] == null ? undefined : UiDataSinkHttpDataPushMethodFromJSON(json['method']),
        'baseUrl': json['baseUrl'],
        'queryString': json['queryString'] == null ? undefined : json['queryString'],
        'authHeaderName': json['authHeaderName'] == null ? undefined : json['authHeaderName'],
        'authHeaderValue': json['authHeaderValue'] == null ? undefined : SecretValueFromJSON(json['authHeaderValue']),
        'headers': json['headers'] == null ? undefined : json['headers'],
    };
}

export function UiDataSinkHttpDataPushToJSON(json: any): UiDataSinkHttpDataPush {
    return UiDataSinkHttpDataPushToJSONTyped(json, false);
}

export function UiDataSinkHttpDataPushToJSONTyped(value?: UiDataSinkHttpDataPush | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'method': UiDataSinkHttpDataPushMethodToJSON(value['method']),
        'baseUrl': value['baseUrl'],
        'queryString': value['queryString'],
        'authHeaderName': value['authHeaderName'],
        'authHeaderValue': SecretValueToJSON(value['authHeaderValue']),
        'headers': value['headers'],
    };
}

