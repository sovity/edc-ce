/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Decides whether the data offer is to be published published:
 * * `DONT_PUBLISH` - Data offer is not published. Only an asset is created.
 * * `PUBLISH_UNRESTRICTED` - Creates the asset and publishes it using the always-true policy.
 * * `PUBLISH_RESTRICTED` - Creates the asset and publishes it with a newly created policy definition with the given policy expression
 * 
 * @export
 */
export const DataOfferPublishType = {
    DontPublish: 'DONT_PUBLISH',
    PublishUnrestricted: 'PUBLISH_UNRESTRICTED',
    PublishRestricted: 'PUBLISH_RESTRICTED'
} as const;
export type DataOfferPublishType = typeof DataOfferPublishType[keyof typeof DataOfferPublishType];


export function instanceOfDataOfferPublishType(value: any): boolean {
    for (const key in DataOfferPublishType) {
        if (Object.prototype.hasOwnProperty.call(DataOfferPublishType, key)) {
            if (DataOfferPublishType[key as keyof typeof DataOfferPublishType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function DataOfferPublishTypeFromJSON(json: any): DataOfferPublishType {
    return DataOfferPublishTypeFromJSONTyped(json, false);
}

export function DataOfferPublishTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataOfferPublishType {
    return json as DataOfferPublishType;
}

export function DataOfferPublishTypeToJSON(value?: DataOfferPublishType | null): any {
    return value as any;
}

export function DataOfferPublishTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): DataOfferPublishType {
    return value as DataOfferPublishType;
}

