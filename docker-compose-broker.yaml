version: "3.8"
services:
  broker-ui:
    image: ${EDC_UI_IMAGE}
    ports:
      - '11000:8080'
    environment:
      EDC_UI_ACTIVE_PROFILE: broker
      EDC_UI_MANAGEMENT_API_URL: http://localhost:11002/backend/api/management
      EDC_UI_MANAGEMENT_API_KEY: ApiKeyDefaultValue
      NGINX_ACCESS_LOG: off
  broker:
    image: ${BROKER_IMAGE}
    depends_on:
      - broker-postgresql
      - connector
    environment:
      EDC_BROKER_SERVER_KNOWN_CONNECTORS: "http://connector:11003/api/dsp"
      EDC_BROKER_SERVER_KNOWN_DATASPACE_CONNECTORS: "Mobilithek=https://some-other-connector/api/dsp"

      # Hide offline data offers after 1 minute in dev
      EDC_BROKER_SERVER_HIDE_OFFLINE_DATA_OFFERS_AFTER: "PT1M"

      MY_EDC_FQDN: "broker"
      EDC_API_AUTH_KEY: ApiKeyDefaultValue

      MY_EDC_JDBC_URL: jdbc:postgresql://broker-postgresql:5432/edc
      MY_EDC_JDBC_USER: edc
      MY_EDC_JDBC_PASSWORD: edc

      # docker compose local dev environment overrides (don't use with non-dev images)
      MY_EDC_PROTOCOL: "http://"
      EDC_DSP_CALLBACK_ADDRESS: http://broker:11003/backend/api/dsp
      EDC_WEB_REST_CORS_ENABLED: 'true'
      EDC_WEB_REST_CORS_HEADERS: 'origin,content-type,accept,authorization,x-api-key'
      EDC_WEB_REST_CORS_ORIGINS: '*'
      EDC_AGENT_IDENTITY_KEY: 'client_id' # required for Mock IAM to work
    ports:
      - '11001:11001'
      - '11002:11002'
      - '11003:11003'
      - '11004:11004'
      - '11005:5005'
  broker-postgresql:
    image: docker.io/bitnami/postgresql:15
    restart: always
    environment:
      POSTGRESQL_USERNAME: edc
      POSTGRESQL_PASSWORD: edc
      POSTGRESQL_DATABASE: edc
    ports:
      - '54321:5432'
    volumes:
      - 'broker-postgresql:/bitnami/postgresql'
  connector-ui:
    image: ${EDC_UI_IMAGE}
    ports:
      - '22000:8080'
    environment:
      EDC_UI_ACTIVE_PROFILE: mds-open-source
      EDC_UI_CONFIG_URL: edc-ui-config
      EDC_UI_MANAGEMENT_API_URL: http://localhost:22002/api/management
      EDC_UI_MANAGEMENT_API_KEY: ApiKeyDefaultValue
      NGINX_ACCESS_LOG: off
  connector:
    image: ${EDC_IMAGE}
    depends_on:
      - connector-postgresql
    environment:
      MY_EDC_PARTICIPANT_ID: "MDSL00001XX.C0001XX"
      MY_EDC_TITLE: "EDC Connector"
      MY_EDC_DESCRIPTION: "sovity Community Edition EDC Connector"
      MY_EDC_CURATOR_URL: "https://example.com"
      MY_EDC_CURATOR_NAME: "Example GmbH"
      MY_EDC_MAINTAINER_URL: "https://sovity.de"
      MY_EDC_MAINTAINER_NAME: "sovity GmbH"

      MY_EDC_FQDN: "connector"
      EDC_API_AUTH_KEY: ApiKeyDefaultValue

      MY_EDC_JDBC_URL: jdbc:postgresql://connector-postgresql:5432/edc
      MY_EDC_JDBC_USER: edc
      MY_EDC_JDBC_PASSWORD: edc

      # docker compose local dev environment overrides (don't use with non-dev images)
      MY_EDC_PROTOCOL: "http://"
      EDC_DSP_CALLBACK_ADDRESS: http://connector:11003/api/dsp
      EDC_WEB_REST_CORS_ENABLED: 'true'
      EDC_WEB_REST_CORS_HEADERS: 'origin,content-type,accept,authorization,x-api-key'
      EDC_WEB_REST_CORS_ORIGINS: '*'
      EDC_AGENT_IDENTITY_KEY: 'client_id' # required for Mock IAM to work
    ports:
      - '22001:11001'
      - '22002:11002'
      - '22003:11003'
      - '22004:11004'
      - '22005:5005'
  connector-postgresql:
    image: docker.io/bitnami/postgresql:15
    restart: always
    environment:
      POSTGRESQL_USERNAME: edc
      POSTGRESQL_PASSWORD: edc
      POSTGRESQL_DATABASE: edc
    ports:
      - '54322:5432'
    volumes:
      - 'connector-postgresql:/bitnami/postgresql'
volumes:
  broker-postgresql:
    driver: local
  connector-postgresql:
    driver: local
