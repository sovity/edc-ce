/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContractNegotiationState } from './ContractNegotiationState';
import {
    ContractNegotiationStateFromJSON,
    ContractNegotiationStateFromJSONTyped,
    ContractNegotiationStateToJSON,
    ContractNegotiationStateToJSONTyped,
} from './ContractNegotiationState';

/**
 * Contract Negotiation Information
 * @export
 * @interface UiContractNegotiation
 */
export interface UiContractNegotiation {
    /**
     * Contract Negotiation Id
     * @type {string}
     * @memberof UiContractNegotiation
     */
    contractNegotiationId: string;
    /**
     * Contract Negotiation Creation Time
     * @type {Date}
     * @memberof UiContractNegotiation
     */
    createdAt: Date;
    /**
     * Contract Agreement Id
     * @type {string}
     * @memberof UiContractNegotiation
     */
    contractAgreementId?: string;
    /**
     * State of the Contract Negotiation state machine
     * @type {ContractNegotiationState}
     * @memberof UiContractNegotiation
     */
    state: ContractNegotiationState;
}

/**
 * Check if a given object implements the UiContractNegotiation interface.
 */
export function instanceOfUiContractNegotiation(value: any): value is UiContractNegotiation {
    if (!('contractNegotiationId' in value) || value['contractNegotiationId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    return true;
}

export function UiContractNegotiationFromJSON(json: any): UiContractNegotiation {
    return UiContractNegotiationFromJSONTyped(json, false);
}

export function UiContractNegotiationFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiContractNegotiation {
    if (json == null) {
        return json;
    }
    return {
        
        'contractNegotiationId': json['contractNegotiationId'],
        'createdAt': (new Date(json['createdAt'])),
        'contractAgreementId': json['contractAgreementId'] == null ? undefined : json['contractAgreementId'],
        'state': ContractNegotiationStateFromJSON(json['state']),
    };
}

export function UiContractNegotiationToJSON(json: any): UiContractNegotiation {
    return UiContractNegotiationToJSONTyped(json, false);
}

export function UiContractNegotiationToJSONTyped(value?: UiContractNegotiation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contractNegotiationId': value['contractNegotiationId'],
        'createdAt': ((value['createdAt']).toISOString()),
        'contractAgreementId': value['contractAgreementId'],
        'state': ContractNegotiationStateToJSON(value['state']),
    };
}

