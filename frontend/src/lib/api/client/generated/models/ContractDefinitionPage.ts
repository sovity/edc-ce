/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContractDefinitionEntry } from './ContractDefinitionEntry';
import {
    ContractDefinitionEntryFromJSON,
    ContractDefinitionEntryFromJSONTyped,
    ContractDefinitionEntryToJSON,
    ContractDefinitionEntryToJSONTyped,
} from './ContractDefinitionEntry';

/**
 * Data as required by the UI's Contract Definition Page. Will be replaced with a Catalog Definition Page that shall support asset property paths properly
 * @export
 * @interface ContractDefinitionPage
 */
export interface ContractDefinitionPage {
    /**
     * Contract Definition Entries
     * @type {Array<ContractDefinitionEntry>}
     * @memberof ContractDefinitionPage
     */
    contractDefinitions: Array<ContractDefinitionEntry>;
}

/**
 * Check if a given object implements the ContractDefinitionPage interface.
 */
export function instanceOfContractDefinitionPage(value: any): value is ContractDefinitionPage {
    if (!('contractDefinitions' in value) || value['contractDefinitions'] === undefined) return false;
    return true;
}

export function ContractDefinitionPageFromJSON(json: any): ContractDefinitionPage {
    return ContractDefinitionPageFromJSONTyped(json, false);
}

export function ContractDefinitionPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractDefinitionPage {
    if (json == null) {
        return json;
    }
    return {
        
        'contractDefinitions': ((json['contractDefinitions'] as Array<any>).map(ContractDefinitionEntryFromJSON)),
    };
}

export function ContractDefinitionPageToJSON(json: any): ContractDefinitionPage {
    return ContractDefinitionPageToJSONTyped(json, false);
}

export function ContractDefinitionPageToJSONTyped(value?: ContractDefinitionPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contractDefinitions': ((value['contractDefinitions'] as Array<any>).map(ContractDefinitionEntryToJSON)),
    };
}

