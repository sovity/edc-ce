/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * OAuth 2 authorization with a private key
 * @export
 * @interface UiHttpOauth2PrivateKeyAuthorization
 */
export interface UiHttpOauth2PrivateKeyAuthorization {
    /**
     * The vault entry name of the private key used to sign the JWT sent to the Oauth2 server.
     * @type {string}
     * @memberof UiHttpOauth2PrivateKeyAuthorization
     */
    privateKeyName: string;
    /**
     * The validity of the JWT token sent to the Oauth2 server (in seconds).
     * @type {number}
     * @memberof UiHttpOauth2PrivateKeyAuthorization
     */
    tokenValidityInSeconds: number;
}

/**
 * Check if a given object implements the UiHttpOauth2PrivateKeyAuthorization interface.
 */
export function instanceOfUiHttpOauth2PrivateKeyAuthorization(value: any): value is UiHttpOauth2PrivateKeyAuthorization {
    if (!('privateKeyName' in value) || value['privateKeyName'] === undefined) return false;
    if (!('tokenValidityInSeconds' in value) || value['tokenValidityInSeconds'] === undefined) return false;
    return true;
}

export function UiHttpOauth2PrivateKeyAuthorizationFromJSON(json: any): UiHttpOauth2PrivateKeyAuthorization {
    return UiHttpOauth2PrivateKeyAuthorizationFromJSONTyped(json, false);
}

export function UiHttpOauth2PrivateKeyAuthorizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiHttpOauth2PrivateKeyAuthorization {
    if (json == null) {
        return json;
    }
    return {
        
        'privateKeyName': json['privateKeyName'],
        'tokenValidityInSeconds': json['tokenValidityInSeconds'],
    };
}

export function UiHttpOauth2PrivateKeyAuthorizationToJSON(json: any): UiHttpOauth2PrivateKeyAuthorization {
    return UiHttpOauth2PrivateKeyAuthorizationToJSONTyped(json, false);
}

export function UiHttpOauth2PrivateKeyAuthorizationToJSONTyped(value?: UiHttpOauth2PrivateKeyAuthorization | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'privateKeyName': value['privateKeyName'],
        'tokenValidityInSeconds': value['tokenValidityInSeconds'],
    };
}

