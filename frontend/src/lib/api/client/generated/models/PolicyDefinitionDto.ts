/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiPolicy } from './UiPolicy';
import {
    UiPolicyFromJSON,
    UiPolicyFromJSONTyped,
    UiPolicyToJSON,
    UiPolicyToJSONTyped,
} from './UiPolicy';

/**
 * Policy Definition as required for the Policy Definition Page
 * @export
 * @interface PolicyDefinitionDto
 */
export interface PolicyDefinitionDto {
    /**
     * Policy Definition ID
     * @type {string}
     * @memberof PolicyDefinitionDto
     */
    policyDefinitionId: string;
    /**
     * Policy Contents
     * @type {UiPolicy}
     * @memberof PolicyDefinitionDto
     */
    policy: UiPolicy;
}

/**
 * Check if a given object implements the PolicyDefinitionDto interface.
 */
export function instanceOfPolicyDefinitionDto(value: any): value is PolicyDefinitionDto {
    if (!('policyDefinitionId' in value) || value['policyDefinitionId'] === undefined) return false;
    if (!('policy' in value) || value['policy'] === undefined) return false;
    return true;
}

export function PolicyDefinitionDtoFromJSON(json: any): PolicyDefinitionDto {
    return PolicyDefinitionDtoFromJSONTyped(json, false);
}

export function PolicyDefinitionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyDefinitionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'policyDefinitionId': json['policyDefinitionId'],
        'policy': UiPolicyFromJSON(json['policy']),
    };
}

export function PolicyDefinitionDtoToJSON(json: any): PolicyDefinitionDto {
    return PolicyDefinitionDtoToJSONTyped(json, false);
}

export function PolicyDefinitionDtoToJSONTyped(value?: PolicyDefinitionDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'policyDefinitionId': value['policyDefinitionId'],
        'policy': UiPolicyToJSON(value['policy']),
    };
}

