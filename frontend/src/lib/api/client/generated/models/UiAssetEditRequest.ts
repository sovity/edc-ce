/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiDataSource } from './UiDataSource';
import {
    UiDataSourceFromJSON,
    UiDataSourceFromJSONTyped,
    UiDataSourceToJSON,
    UiDataSourceToJSONTyped,
} from './UiDataSource';

/**
 * Type-safe data offer metadata for editing an asset as supported by the sovity product landscape. Contains extension points.
 * @export
 * @interface UiAssetEditRequest
 */
export interface UiAssetEditRequest {
    /**
     * Data Source
     * @type {UiDataSource}
     * @memberof UiAssetEditRequest
     */
    dataSourceOverrideOrNull?: UiDataSource;
    /**
     * Asset Title
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    title?: string;
    /**
     * Asset Language
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    language?: string;
    /**
     * Asset Description
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    description?: string;
    /**
     * Asset Homepage
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    publisherHomepage?: string;
    /**
     * License URL
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    licenseUrl?: string;
    /**
     * Version
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    version?: string;
    /**
     * Asset Keywords
     * @type {Array<string>}
     * @memberof UiAssetEditRequest
     */
    keywords?: Array<string>;
    /**
     * Asset MediaType
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    mediaType?: string;
    /**
     * Landing Page URL
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    landingPageUrl?: string;
    /**
     * Data Category
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    dataCategory?: string;
    /**
     * Data Subcategory
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    dataSubcategory?: string;
    /**
     * Data Model
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    dataModel?: string;
    /**
     * Geo-Reference Method
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    geoReferenceMethod?: string;
    /**
     * Transport Mode
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    transportMode?: string;
    /**
     * The sovereign is distinct from the publisher by being the legal owner of the data.
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    sovereignLegalName?: string;
    /**
     * Geo location
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    geoLocation?: string;
    /**
     * Locations by NUTS standard which divides countries into administrative divisions
     * @type {Array<string>}
     * @memberof UiAssetEditRequest
     */
    nutsLocations?: Array<string>;
    /**
     * Data sample URLs
     * @type {Array<string>}
     * @memberof UiAssetEditRequest
     */
    dataSampleUrls?: Array<string>;
    /**
     * Reference file/schema URLs
     * @type {Array<string>}
     * @memberof UiAssetEditRequest
     */
    referenceFileUrls?: Array<string>;
    /**
     * Additional information on reference files/schemas
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    referenceFilesDescription?: string;
    /**
     * Instructions for use that are not legally relevant e.g. information on how to cite the dataset in papers
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    conditionsForUse?: string;
    /**
     * Data update frequency
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    dataUpdateFrequency?: string;
    /**
     * Temporal coverage start date
     * @type {Date}
     * @memberof UiAssetEditRequest
     */
    temporalCoverageFrom?: Date;
    /**
     * Temporal coverage end date (inclusive)
     * @type {Date}
     * @memberof UiAssetEditRequest
     */
    temporalCoverageToInclusive?: Date;
    /**
     * Contains serialized custom properties in the JSON format.
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    customJsonAsString?: string;
    /**
     * Contains serialized custom properties in the JSON LD format. Contrary to the customJsonAsString field, this string must represent a JSON LD object and will be affected by JSON LD compaction and expansion. Due to a technical limitation, the properties can't be booleans.
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    customJsonLdAsString?: string;
    /**
     * Same as customJsonAsString but the data will be stored in the private properties.
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    privateCustomJsonAsString?: string;
    /**
     * Same as customJsonLdAsString but the data will be stored in the private properties. The same limitations apply.
     * @type {string}
     * @memberof UiAssetEditRequest
     */
    privateCustomJsonLdAsString?: string;
}

/**
 * Check if a given object implements the UiAssetEditRequest interface.
 */
export function instanceOfUiAssetEditRequest(value: any): value is UiAssetEditRequest {
    return true;
}

export function UiAssetEditRequestFromJSON(json: any): UiAssetEditRequest {
    return UiAssetEditRequestFromJSONTyped(json, false);
}

export function UiAssetEditRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiAssetEditRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'dataSourceOverrideOrNull': json['dataSourceOverrideOrNull'] == null ? undefined : UiDataSourceFromJSON(json['dataSourceOverrideOrNull']),
        'title': json['title'] == null ? undefined : json['title'],
        'language': json['language'] == null ? undefined : json['language'],
        'description': json['description'] == null ? undefined : json['description'],
        'publisherHomepage': json['publisherHomepage'] == null ? undefined : json['publisherHomepage'],
        'licenseUrl': json['licenseUrl'] == null ? undefined : json['licenseUrl'],
        'version': json['version'] == null ? undefined : json['version'],
        'keywords': json['keywords'] == null ? undefined : json['keywords'],
        'mediaType': json['mediaType'] == null ? undefined : json['mediaType'],
        'landingPageUrl': json['landingPageUrl'] == null ? undefined : json['landingPageUrl'],
        'dataCategory': json['dataCategory'] == null ? undefined : json['dataCategory'],
        'dataSubcategory': json['dataSubcategory'] == null ? undefined : json['dataSubcategory'],
        'dataModel': json['dataModel'] == null ? undefined : json['dataModel'],
        'geoReferenceMethod': json['geoReferenceMethod'] == null ? undefined : json['geoReferenceMethod'],
        'transportMode': json['transportMode'] == null ? undefined : json['transportMode'],
        'sovereignLegalName': json['sovereignLegalName'] == null ? undefined : json['sovereignLegalName'],
        'geoLocation': json['geoLocation'] == null ? undefined : json['geoLocation'],
        'nutsLocations': json['nutsLocations'] == null ? undefined : json['nutsLocations'],
        'dataSampleUrls': json['dataSampleUrls'] == null ? undefined : json['dataSampleUrls'],
        'referenceFileUrls': json['referenceFileUrls'] == null ? undefined : json['referenceFileUrls'],
        'referenceFilesDescription': json['referenceFilesDescription'] == null ? undefined : json['referenceFilesDescription'],
        'conditionsForUse': json['conditionsForUse'] == null ? undefined : json['conditionsForUse'],
        'dataUpdateFrequency': json['dataUpdateFrequency'] == null ? undefined : json['dataUpdateFrequency'],
        'temporalCoverageFrom': json['temporalCoverageFrom'] == null ? undefined : (new Date(json['temporalCoverageFrom'])),
        'temporalCoverageToInclusive': json['temporalCoverageToInclusive'] == null ? undefined : (new Date(json['temporalCoverageToInclusive'])),
        'customJsonAsString': json['customJsonAsString'] == null ? undefined : json['customJsonAsString'],
        'customJsonLdAsString': json['customJsonLdAsString'] == null ? undefined : json['customJsonLdAsString'],
        'privateCustomJsonAsString': json['privateCustomJsonAsString'] == null ? undefined : json['privateCustomJsonAsString'],
        'privateCustomJsonLdAsString': json['privateCustomJsonLdAsString'] == null ? undefined : json['privateCustomJsonLdAsString'],
    };
}

export function UiAssetEditRequestToJSON(json: any): UiAssetEditRequest {
    return UiAssetEditRequestToJSONTyped(json, false);
}

export function UiAssetEditRequestToJSONTyped(value?: UiAssetEditRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataSourceOverrideOrNull': UiDataSourceToJSON(value['dataSourceOverrideOrNull']),
        'title': value['title'],
        'language': value['language'],
        'description': value['description'],
        'publisherHomepage': value['publisherHomepage'],
        'licenseUrl': value['licenseUrl'],
        'version': value['version'],
        'keywords': value['keywords'],
        'mediaType': value['mediaType'],
        'landingPageUrl': value['landingPageUrl'],
        'dataCategory': value['dataCategory'],
        'dataSubcategory': value['dataSubcategory'],
        'dataModel': value['dataModel'],
        'geoReferenceMethod': value['geoReferenceMethod'],
        'transportMode': value['transportMode'],
        'sovereignLegalName': value['sovereignLegalName'],
        'geoLocation': value['geoLocation'],
        'nutsLocations': value['nutsLocations'],
        'dataSampleUrls': value['dataSampleUrls'],
        'referenceFileUrls': value['referenceFileUrls'],
        'referenceFilesDescription': value['referenceFilesDescription'],
        'conditionsForUse': value['conditionsForUse'],
        'dataUpdateFrequency': value['dataUpdateFrequency'],
        'temporalCoverageFrom': value['temporalCoverageFrom'] == null ? undefined : ((value['temporalCoverageFrom']).toISOString().substring(0,10)),
        'temporalCoverageToInclusive': value['temporalCoverageToInclusive'] == null ? undefined : ((value['temporalCoverageToInclusive']).toISOString().substring(0,10)),
        'customJsonAsString': value['customJsonAsString'],
        'customJsonLdAsString': value['customJsonLdAsString'],
        'privateCustomJsonAsString': value['privateCustomJsonAsString'],
        'privateCustomJsonLdAsString': value['privateCustomJsonLdAsString'],
    };
}

