/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TransferProcessStatesDto
 */
export interface TransferProcessStatesDto {
    /**
     * States and count of incoming transferprocess counts
     * @type {{ [key: string]: number; }}
     * @memberof TransferProcessStatesDto
     */
    incomingTransferProcessCounts: { [key: string]: number; };
    /**
     * States and counts of outgoing transferprocess counts
     * @type {{ [key: string]: number; }}
     * @memberof TransferProcessStatesDto
     */
    outgoingTransferProcessCounts: { [key: string]: number; };
}

/**
 * Check if a given object implements the TransferProcessStatesDto interface.
 */
export function instanceOfTransferProcessStatesDto(value: any): value is TransferProcessStatesDto {
    if (!('incomingTransferProcessCounts' in value) || value['incomingTransferProcessCounts'] === undefined) return false;
    if (!('outgoingTransferProcessCounts' in value) || value['outgoingTransferProcessCounts'] === undefined) return false;
    return true;
}

export function TransferProcessStatesDtoFromJSON(json: any): TransferProcessStatesDto {
    return TransferProcessStatesDtoFromJSONTyped(json, false);
}

export function TransferProcessStatesDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferProcessStatesDto {
    if (json == null) {
        return json;
    }
    return {
        
        'incomingTransferProcessCounts': json['incomingTransferProcessCounts'],
        'outgoingTransferProcessCounts': json['outgoingTransferProcessCounts'],
    };
}

export function TransferProcessStatesDtoToJSON(json: any): TransferProcessStatesDto {
    return TransferProcessStatesDtoToJSONTyped(json, false);
}

export function TransferProcessStatesDtoToJSONTyped(value?: TransferProcessStatesDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'incomingTransferProcessCounts': value['incomingTransferProcessCounts'],
        'outgoingTransferProcessCounts': value['outgoingTransferProcessCounts'],
    };
}

