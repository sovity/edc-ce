[versions]
# groups
edcGroup="org.eclipse.edc"
sovityBrokerServerGroup = "de.sovity.broker"
sovityEdcExtensionGroup = "de.sovity.edc.ext"
sovityEdcGroup = "de.sovity.edc"

# images
postgresDbImage = "postgres:15-alpine"

# versions
assertj = "3.23.1"
awaitility = "4.2.0"
commonsCompress = "1.26.1"
commonsCollections = "4.4"
commonsIo = "2.13.0"
commonsLang = "3.13.0"
edc = "0.2.1.2"
findbugs = "3.0.2"
flexmark = "0.64.8"
flyway = "9.0.1"
flywayPlugin = "9.21.1"
gson = "2.10.1"
gsonFire = "1.8.5"
guava = "33.1.0-jre"
hidetakeSwagger = "2.19.2"
hikari = "5.0.1"
jakartaAnnotation = "1.3.5"
jakartaJson = "2.0.1"
jakartaRs = "3.1.0"
jakartaServletApi = "5.0.0"
jakartaValidation = "3.0.2"
java = "17"
javapoet = "1.13.0"
jersey = "3.1.3"
jetty = "11.0.15"
jooq = "3.18.7"
jooqPostgresqlJson = "4.0.0"
jooqPlugin = "7.1.1"
json = "20220924"
jsonAssert = "1.5.1"
jsonUnit = "3.2.7"
junit = "5.10.0"
loggingHouse = "0.2.10"
lombok = "1.18.30"
mockito = "4.8.0"
mockserver = "5.15.0"
okhttp = "4.12.0"
okio = "3.9.0"
openapiGenerator6 = "6.6.0"
openapiGenerator7 = "7.0.1"
openapiJackson = "0.2.6"
postgres = "42.7.2"
quarkus = "2.16.6.Final"
quartz = "2.3.2"
restAssured = "4.5.0"
retry = "1.5.7"
shadow = "7.1.2"
swagger = "1.6.12"
swaggerCore = "2.2.18"
testcontainers = "1.19.1"
titaniumLd = "1.3.2"
tractus = "0.5.3"


[libraries]

apache-commonsCollections = { module = "org.apache.commons:commons-collections4", version.ref = "commonsCollections" }
apache-commonsCompress = { module = "org.apache.commons:commons-compress", version.ref = "commonsCompress" }
apache-commonsIo = { module = "commons-io:commons-io", version.ref = "commonsIo" }
apache-commonsLang = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang" }

apicatalog-titaniumJsonLd = { module = "com.apicatalog:titanium-json-ld", version.ref = "titaniumLd" }

assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }

awaitility-java = { module = "org.awaitility:awaitility", version.ref = "awaitility" }

edc-apiCore = { module = "org.eclipse.edc:api-core", version.ref = "edc" }
edc-apiObservability = { module = "org.eclipse.edc:api-observability", version.ref = "edc" }
edc-authSpi = { module = "org.eclipse.edc:auth-spi", version.ref = "edc" }
edc-authTokenbased = { module = "org.eclipse.edc:auth-tokenbased", version.ref = "edc" }
edc-boot = { module = "org.eclipse.edc:boot", version.ref = "edc" }
edc-configurationFilesystem = { module = "org.eclipse.edc:configuration-filesystem", version.ref = "edc" }
edc-connectorCore = { module = "org.eclipse.edc:connector-core", version.ref = "edc" }
edc-contractDefinitionApi = { module = "org.eclipse.edc:contract-definition-api", version.ref = "edc" }
edc-contractSpi = { module = "org.eclipse.edc:contract-spi", version.ref = "edc" }
edc-controlPlaneAggregateServices = { module = "org.eclipse.edc:control-plane-aggregate-services", version.ref = "edc" }
edc-controlPlaneCore = { module = "org.eclipse.edc:control-plane-core", version.ref = "edc" }
edc-controlPlaneSpi = { module = "org.eclipse.edc:control-plane-spi", version.ref = "edc" }
edc-controlPlaneSql = { module = "org.eclipse.edc:control-plane-sql", version.ref = "edc" }
edc-coreSpi = { module = "org.eclipse.edc:core-spi", version.ref = "edc" }
edc-dataPlaneCore = { module = "org.eclipse.edc:data-plane-core", version.ref = "edc" }
edc-dataPlaneFramework = { module = "org.eclipse.edc:data-plane-framework", version.ref = "edc" }
edc-dataPlaneHttp = { module = "org.eclipse.edc:data-plane-http", version.ref = "edc" }
edc-dataPlaneSelectorClient = { module = "org.eclipse.edc:data-plane-selector-client", version.ref = "edc" }
edc-dataPlaneSelectorCore = { module = "org.eclipse.edc:data-plane-selector-core", version.ref = "edc" }
edc-dataPlaneUtil = { module = "org.eclipse.edc:data-plane-util", version.ref = "edc" }
edc-dsp = { module = "org.eclipse.edc:dsp", version.ref = "edc" }
edc-dspApiConfiguration = { module = "org.eclipse.edc:dsp-api-configuration", version.ref = "edc" }
edc-dspHttpSpi = { module = "org.eclipse.edc:dsp-http-spi", version.ref = "edc" }
edc-http = { module = "org.eclipse.edc:http", version.ref = "edc" }
edc-iamMock = { module = "org.eclipse.edc:iam-mock", version.ref = "edc" }
edc-jsonLd = { module = "org.eclipse.edc:json-ld", version.ref = "edc" }
edc-jsonLdSpi = { module = "org.eclipse.edc:json-ld-spi", version.ref = "edc" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
edc-managementApi = { module = "org.eclipse.edc:management-api", version.ref = "edc" }
edc-managementApiConfiguration = { module = "org.eclipse.edc:management-api-configuration", version.ref = "edc" }
edc-monitorJdkLogger = { module = "org.eclipse.edc:monitor-jdk-logger", version.ref = "edc" }
edc-oauth2Core = { module = "org.eclipse.edc:oauth2-core", version.ref = "edc" }
edc-policyDefinitionApi = { module = "org.eclipse.edc:policy-definition-api", version.ref = "edc" }
edc-policyEngineSpi = { module = "org.eclipse.edc:policy-engine-spi", version.ref = "edc" }
edc-policyModel = { module = "org.eclipse.edc:policy-model", version.ref = "edc" }
edc-sqlCore = { module = "org.eclipse.edc:sql-core", version.ref = "edc" }
edc-transactionLocal = { module = "org.eclipse.edc:transaction-local", version.ref = "edc" }
edc-transferDataPlane = { module = "org.eclipse.edc:transfer-data-plane", version.ref = "edc" }
edc-transferProcessApi = { module = "org.eclipse.edc:transfer-process-api", version.ref = "edc" }
edc-transferSpi = { module = "org.eclipse.edc:transfer-spi", version.ref = "edc" }
edc-transformCore = { module = "org.eclipse.edc:transform-core", version.ref = "edc" }
edc-transformSpi = { module = "org.eclipse.edc:transform-spi", version.ref = "edc" }
edc-vaultFilesystem = { module = "org.eclipse.edc:vault-filesystem", version.ref = "edc" }

findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs" }

flexmark-all = { module = "com.vladsch.flexmark:flexmark-all", version.ref = "flexmark" }

flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

gsonFire = { module = "io.gsonfire:gson-fire", version.ref = "gsonFire" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }

hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }

jakarta-annotationApi = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakartaAnnotation" }
jakarta-json = { module = "org.glassfish:jakarta.json", version.ref = "jakartaJson" }
jakarta-rsApi = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "jakartaRs" }
jakarta-servletApi = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakartaServletApi" }
jakarta-validationApi = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakartaValidation" }

jersey-mediaMultipart = { module = "org.glassfish.jersey.media:jersey-media-multipart", version.ref = "jersey" }

jetty-client = { module = "org.eclipse.jetty:jetty-client", version.ref = "jetty" }
jetty-http = { module = "org.eclipse.jetty:jetty-http", version.ref = "jetty" }
jetty-io = { module = "org.eclipse.jetty:jetty-io", version.ref = "jetty" }
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty" }
jetty-util = { module = "org.eclipse.jetty:jetty-util", version.ref = "jetty" }
jetty-webapp = { module = "org.eclipse.jetty:jetty-webapp", version.ref = "jetty" }

jooq-jooq = { module = "org.jooq:jooq", version.ref = "jooq" }

jsonAssert = { module = "org.skyscreamer:jsonassert", version.ref = "jsonAssert" }

jsonUnit-assertj = { module = "net.javacrumbs.json-unit:json-unit-assertj", version.ref = "jsonUnit" }

junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }

loggingHouse-client = { module = "logging-house:logging-house-client", version.ref = "loggingHouse" }

lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
mockito-junitJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "mockserver" }

okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

okio-jvm = { module = "com.squareup.okio:okio-jvm", version.ref = "okio" }

openapi-jacksonDatabindNullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "openapiJackson" }

postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }

quarkus-bom = { module = "io.quarkus.platform:quarkus-bom", version.ref = "quarkus" }

quartz-quartz = { module = "org.quartz-scheduler:quartz", version.ref = "quartz" }

restAssured-restAssured = { module = "io.rest-assured:rest-assured", version.ref = "restAssured" }

squareup-javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }

swagger-annotations = { module = "io.swagger:swagger-annotations", version.ref = "swagger" }
swagger-annotationsJakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swaggerCore" }
swagger-jaxrs2Jakarta = { module = "io.swagger.core.v3:swagger-jaxrs2-jakarta", version.ref = "swaggerCore" }

t9tJooq-jooqPostgresqlJson = { module = "com.github.t9t.jooq:jooq-postgresql-json", version.ref = "jooqPostgresqlJson" }

testcontainers-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junitJupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }

tractus-sqlPool = { module = "org.eclipse.tractusx.edc:sql-pool", version.ref = "tractus" }

[bundles]
jetty-cve2023 = [
    "jetty-client",
    "jetty-http",
    "jetty-io",
    "jetty-server",
    "jetty-util",
    "jetty-webapp",
]

[plugins]
hidetake-swaggerGenerator = { id = "org.hidetake.swagger.generator", version.ref = "hidetakeSwagger" }
openapi-generator6 = { id = "org.openapi.generator", version.ref = "openapiGenerator6" }
openapi-generator7 = { id = "org.openapi.generator", version.ref = "openapiGenerator7" }
quarkus = { id = "io.quarkus", version.ref = "quarkus" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
swagger-plugin = { id = "io.swagger.core.v3.swagger-gradle-plugin", version.ref = "swaggerCore" }
retry = { id = "org.gradle.test-retry", version.ref = "retry" }
jooq = { id = "nu.studer.jooq", version.ref = "jooqPlugin" }
flyway = { id = "org.flywaydb.flyway", version.ref = "flywayPlugin" }
