/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * DAPS Config
 * @export
 * @interface DashboardDapsConfig
 */
export interface DashboardDapsConfig {
    /**
     * Your Connector's DAPS Token URL
     * @type {string}
     * @memberof DashboardDapsConfig
     */
    tokenUrl: string;
    /**
     * Your Connector's DAPS JWKS URL
     * @type {string}
     * @memberof DashboardDapsConfig
     */
    jwksUrl: string;
}

/**
 * Check if a given object implements the DashboardDapsConfig interface.
 */
export function instanceOfDashboardDapsConfig(value: any): value is DashboardDapsConfig {
    if (!('tokenUrl' in value) || value['tokenUrl'] === undefined) return false;
    if (!('jwksUrl' in value) || value['jwksUrl'] === undefined) return false;
    return true;
}

export function DashboardDapsConfigFromJSON(json: any): DashboardDapsConfig {
    return DashboardDapsConfigFromJSONTyped(json, false);
}

export function DashboardDapsConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardDapsConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'tokenUrl': json['tokenUrl'],
        'jwksUrl': json['jwksUrl'],
    };
}

export function DashboardDapsConfigToJSON(json: any): DashboardDapsConfig {
    return DashboardDapsConfigToJSONTyped(json, false);
}

export function DashboardDapsConfigToJSONTyped(value?: DashboardDapsConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'tokenUrl': value['tokenUrl'],
        'jwksUrl': value['jwksUrl'],
    };
}

