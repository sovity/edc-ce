/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiAsset } from './UiAsset';
import {
    UiAssetFromJSON,
    UiAssetFromJSONTyped,
    UiAssetToJSON,
    UiAssetToJSONTyped,
} from './UiAsset';
import type { UiContractOffer } from './UiContractOffer';
import {
    UiContractOfferFromJSON,
    UiContractOfferFromJSONTyped,
    UiContractOfferToJSON,
    UiContractOfferToJSONTyped,
} from './UiContractOffer';

/**
 * Catalog Data Offer as required by the UI
 * @export
 * @interface UiDataOffer
 */
export interface UiDataOffer {
    /**
     * Connector Endpoint
     * @type {string}
     * @memberof UiDataOffer
     */
    endpoint: string;
    /**
     * Participant ID. Required for initiating transfers.
     * @type {string}
     * @memberof UiDataOffer
     */
    participantId: string;
    /**
     * Asset Information
     * @type {UiAsset}
     * @memberof UiDataOffer
     */
    asset: UiAsset;
    /**
     * Available Contract Offers
     * @type {Array<UiContractOffer>}
     * @memberof UiDataOffer
     */
    contractOffers: Array<UiContractOffer>;
}

/**
 * Check if a given object implements the UiDataOffer interface.
 */
export function instanceOfUiDataOffer(value: any): value is UiDataOffer {
    if (!('endpoint' in value) || value['endpoint'] === undefined) return false;
    if (!('participantId' in value) || value['participantId'] === undefined) return false;
    if (!('asset' in value) || value['asset'] === undefined) return false;
    if (!('contractOffers' in value) || value['contractOffers'] === undefined) return false;
    return true;
}

export function UiDataOfferFromJSON(json: any): UiDataOffer {
    return UiDataOfferFromJSONTyped(json, false);
}

export function UiDataOfferFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiDataOffer {
    if (json == null) {
        return json;
    }
    return {
        
        'endpoint': json['endpoint'],
        'participantId': json['participantId'],
        'asset': UiAssetFromJSON(json['asset']),
        'contractOffers': ((json['contractOffers'] as Array<any>).map(UiContractOfferFromJSON)),
    };
}

export function UiDataOfferToJSON(json: any): UiDataOffer {
    return UiDataOfferToJSONTyped(json, false);
}

export function UiDataOfferToJSONTyped(value?: UiDataOffer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endpoint': value['endpoint'],
        'participantId': value['participantId'],
        'asset': UiAssetToJSON(value['asset']),
        'contractOffers': ((value['contractOffers'] as Array<any>).map(UiContractOfferToJSON)),
    };
}

