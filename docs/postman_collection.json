{
	"info": {
		"_postman_id": "91a35646-a337-4456-89d0-e3b96d21a593",
		"name": "sovity EDC (0.1.2)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Assets",
			"item": [
				{
					"name": "1 Create Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"asset\": {\n        \"properties\": {\n            \"asset:prop:name\": \"http source\",\n            \"asset:prop:description\": \"http source asset description\",\n            \"edc:id\": \"{{ASSET_ID}}\"\n        }\n    },\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"{{PROVIDER_EDC_SOURCE_URL}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/assets",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 Create Asset MDS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"asset\": {\n        \"properties\": {\n            \"asset:prop:name\": \"test-document\",\n            \"asset:prop:description\": \"test-document\",\n            \"edc:id\": \"{{ASSET_ID}}\",\n            \"asset:prop:contenttype\": \"text/plain\",\n            \"asset:prop:version\": \"1.0\",\n            \"type\": \"AzureStorage\",\n            \"asset:prop:keywords\": \"keyword1,keyword2\",\n            \"asset:prop:language\": \"https://w3id.org/idsa/code/EN\",\n            \"asset:prop:publisher\": \"https://sovity.de/\",\n            \"asset:prop:standardLicense\": \"https://creativecommons.org/licenses/by/4.0/\",\n            \"asset:prop:endpointDocumentation\": \"https://github.com/Mobility-Data-Space/mobility-data-space/wiki/MDS-Ontology\",\n            \"http://w3id.org/mds#transportMode\": \"Road\",\n            \"http://w3id.org/mds#dataCategory\": \"Traffic Information\",\n            \"http://w3id.org/mds#dataSubcategory\": \"Hazard Warnings\",\n            \"http://w3id.org/mds#dataModel\": \"CSV\",\n            \"http://w3id.org/mds#geoReferenceMethod\": \"Geo Ref Method Test\"\n        }\n    },\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"{{PROVIDER_EDC_SOURCE_URL}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/assets",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 Delete Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"asset\": {\n        \"properties\": {\n            \"asset:prop:name\": \"text-document\",\n            \"asset:prop:contenttype\": \"text/plain\",\n            \"asset:prop:version\": \"1.0\",\n            \"asset:prop:id\": \"text-document\",\n            \"type\": \"AzureStorage\"\n        }\n    },\n    \"dataAddress\": {\n        \"properties\": {\n            \"type\": \"AzureStorage\",\n            \"account\": \"{{storage_account}}\",\n            \"container\": \"src-container\",\n            \"blobname\": \"text-document.txt\",\n            \"keyName\": \"{{storage_account}}-key1\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/assets/{{ASSET_ID}}",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"assets",
								"{{ASSET_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "1 Request Assets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/assets/request",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"assets",
								"request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Policies",
			"item": [
				{
					"name": "2 Create Simple Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@type\": \"PolicyDefinitionDto\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"policy\": {\n        \"@context\": \"https://www.w3.org/ns/odrl.jsonld\",\n        \"@type\": \"use\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/policydefinitions",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Create Time Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n    },\n    \"@type\": \"PolicyDefinitionDto\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"edc:policy\": {\n        \"@context\": \"https://www.w3.org/ns/odrl.jsonld\",\n        \"odrl:permission\": [\n            {\n                \"odrl:action\": {\n                    \"odrl:type\": \"USE\"\n                },\n                \"odrl:constraint\": [\n                    {\n                        \"odrl:leftOperand\": \"POLICY_EVALUATION_TIME\",\n                        \"odrl:operator\": {\n                            \"@id\": \"odrl:gteq\"\n                        },\n                        \"odrl:rightOperand\": \"2022-05-31T22:00:00.000Z\"\n                    },\n                    {\n                        \"odrl:leftOperand\": \"POLICY_EVALUATION_TIME\",\n                        \"odrl:operator\": {\n                            \"@id\": \"odrl:lt\"\n                        },\n                        \"odrl:rightOperand\": \"2030-06-30T22:00:00.000Z\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/policydefinitions",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Create Participant Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n    },\n    \"@type\": \"PolicyDefinitionDto\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"edc:policy\": {\n        \"odrl:permission\": [\n            {\n                \"odrl:action\": {\n                    \"odrl:type\": \"USE\"\n                },\n                \"odrl:constraint\": [\n                    {\n                        \"odrl:leftOperand\": \"REFERRING_CONNECTOR\",\n                        \"odrl:operator\": {\n                            \"@id\": \"odrl:eq\"\n                        },\n                        \"odrl:rightOperand\": \"{{CONSUMER_EDC_PROTOCOL_URL}}\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/policydefinitions",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"policydefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Delete Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"asset\": {\n        \"properties\": {\n            \"asset:prop:name\": \"text-document\",\n            \"asset:prop:contenttype\": \"text/plain\",\n            \"asset:prop:version\": \"1.0\",\n            \"asset:prop:id\": \"text-document\",\n            \"type\": \"AzureStorage\"\n        }\n    },\n    \"dataAddress\": {\n        \"properties\": {\n            \"type\": \"AzureStorage\",\n            \"account\": \"{{storage_account}}\",\n            \"container\": \"src-container\",\n            \"blobname\": \"text-document.txt\",\n            \"keyName\": \"{{storage_account}}-key1\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/policydefinitions/{{POLICY_ID}}",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"policydefinitions",
								"{{POLICY_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 Request Policies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "pass",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/policydefinitions/request",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"policydefinitions",
								"request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ContractDefinitions",
			"item": [
				{
					"name": "3 Create ContractDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"@type\": \"ContractDefinition\",\n    \"edc:accessPolicyId\": \"{{POLICY_ID}}\",\n    \"edc:contractPolicyId\": \"{{POLICY_ID}}\",\n    \"edc:assetsSelector\": [\n        {\n            \"@type\": \"CriterionDto\",\n            \"edc:operandLeft\": \"https://w3id.org/edc/v0.0.1/ns/id\",\n            \"edc:operator\": \"=\",\n            \"edc:operandRight\": \"{{ASSET_ID}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/contractdefinitions",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractdefinitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 Delete ContractDefinition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/contractdefinitions/{{CONTRACT_DEFINITION_ID}}",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractdefinitions",
								"{{CONTRACT_DEFINITION_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 Request ContractDefinitions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "pass",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/contractdefinitions/request",
							"host": [
								"{{PROVIDER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractdefinitions",
								"request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Catalog",
			"item": [
				{
					"name": "4 Request Catalog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"providerUrl\": \"{{PROVIDER_EDC_PROTOCOL_URL}}\",\r\n    \"querySpec\": {\r\n        \"@type\": \"QuerySpecDto\",\r\n        \"offset\": 0,\r\n        \"limit\": 10\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/catalog/request",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"catalog",
								"request"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contract Negotiations",
			"item": [
				{
					"name": "5 Start Negotiation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"NegotiationInitiateRequestDto\",\r\n    \"connectorId\": \"provider\",\r\n    \"consumerId\": \"consumer\",\r\n    \"providerId\": \"provider\",\r\n    \"connectorAddress\": \"{{PROVIDER_EDC_PROTOCOL_URL}}\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"offer\": {\r\n        \"offerId\": \"{{CONTRACT_DEFINITION_ID}}:{{ASSET_ID}}:b95a4734-009b-44a8-aac6-d36ef5da43c4\",\r\n        \"assetId\": \"{{ASSET_ID}}\",\r\n        \"policy\": {\r\n            \"@id\": \"{{CONTRACT_DEFINITION_ID}}:{{ASSET_ID}}:b95a4734-009b-44a8-aac6-d36ef5da43c4\",\r\n            \"@type\": \"http://www.w3.org/ns/odrl/2/Set\",\r\n            \"http://www.w3.org/ns/odrl/2/permission\": [],\r\n            \"http://www.w3.org/ns/odrl/2/prohibition\": [],\r\n            \"http://www.w3.org/ns/odrl/2/obligation\": [],\r\n            \"http://www.w3.org/ns/odrl/2/target\": \"http-source\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/contractnegotiations",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractnegotiations"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Request Contract Negotiations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/contractnegotiations/request",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractnegotiations",
								"request"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Cancel Negotiation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "pass",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/contractnegotiations/3f009db0-775d-4dfc-a965-decdf5a76aea/cancel",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractnegotiations",
								"3f009db0-775d-4dfc-a965-decdf5a76aea",
								"cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Decline Negotiation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "pass",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/contractnegotiations/88687cb0-1d97-40c5-86c2-ad744afed538/decline",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractnegotiations",
								"88687cb0-1d97-40c5-86c2-ad744afed538",
								"decline"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 Get ContractNegotiation",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/contractnegotiations/a4f61c8f-2406-4035-b091-ab73023643ac",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractnegotiations",
								"a4f61c8f-2406-4035-b091-ab73023643ac"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Contract Agreements",
			"item": [
				{
					"name": "6 Request Contract Agreements",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/contractagreements/request",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractagreements",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 Get Contract Agreement",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/contractagreements/{{CONTRACT_DEFINITION_ID}}:{{ASSET_ID}}:3de78ab9-9400-4996-b136-e6ac5201ddd8",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"contractagreements",
								"{{CONTRACT_DEFINITION_ID}}:{{ASSET_ID}}:3de78ab9-9400-4996-b136-e6ac5201ddd8"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Data Transfer",
			"item": [
				{
					"name": "7 Start Data Push",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "ApiKeyDefaultValue",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"@context\": {\r\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"TransferRequestDto\",\r\n  \"dataDestination\": {\r\n    \"@type\": \"https://w3id.org/edc/v0.0.1/ns/DataAddress\",\r\n    \"edc:type\": \"HttpData\",\r\n    \"edc:properties\": {\r\n      \"edc:baseUrl\": \"{{CONSUMER_EDC_TRANSFER_TARGET_URL}}\"\r\n    }\r\n  },\r\n  \"protocol\": \"dataspace-protocol-http\",\r\n  \"managedResources\": false,\r\n  \"assetId\": \"{{ASSET_ID}}\",\r\n  \"contractId\": \"{{CONTRACT_DEFINITION_ID}}:{{ASSET_ID}}:2037d0ff-e874-453d-bbb0-64ceed620015\",\r\n  \"connectorAddress\": \"{{PROVIDER_EDC_PROTOCOL_URL}}\",\r\n  \"privateProperties\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/transferprocesses",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"transferprocesses"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 Request Transfer Processes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "pass",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/transferprocesses/request",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"transferprocesses",
								"request"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 Cancel Transfer Process",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Api-Key",
								"value": "pass",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"@context\": {\r\n    \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n  },\r\n  \"@type\": \"TerminateTransferDto\",\r\n  \"reason\": \"Termination reason\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/transferprocesses/c715355b-1e4b-49a9-9ef0-956405e88fe3/terminate",
							"host": [
								"{{CONSUMER_EDC_MANAGEMENT_URL}}"
							],
							"path": [
								"transferprocesses",
								"c715355b-1e4b-49a9-9ef0-956405e88fe3",
								"terminate"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "ApiKeyDefaultValue",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
					"    console.log(response.json());",
					"});",
					"pm.environment.set(\"variable_key\", \"variable_value\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "PROVIDER_EDC_MANAGEMENT_URL",
			"value": "http://localhost:11002/api/management/v2",
			"type": "default"
		},
		{
			"key": "PROVIDER_EDC_PROTOCOL_URL",
			"value": "http://edc:11003/api/v1/protocol",
			"type": "default"
		},
		{
			"key": "PROVIDER_EDC_SOURCE_URL",
			"value": "https://api.github.com/repos/sovity/edc-extensions/events",
			"type": "default"
		},
		{
			"key": "CONSUMER_EDC_MANAGEMENT_URL",
			"value": "http://localhost:22002/api/management/v2",
			"type": "default"
		},
		{
			"key": "CONSUMER_EDC_PROTOCOL_URL",
			"value": "http://edc2:11003/api/v1/protocol",
			"type": "default"
		},
		{
			"key": "CONSUMER_EDC_TRANSFER_TARGET_URL",
			"value": "https://webhook.site/a418c986-299d-4e22-a1e1-bf532631913a",
			"type": "default"
		},
		{
			"key": "COUNTER",
			"value": "1",
			"type": "default"
		},
		{
			"key": "ASSET_ID",
			"value": "http-source-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "POLICY_ID",
			"value": "policy-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "CONTRACT_DEFINITION_ID",
			"value": "contract-definition-{{COUNTER}}",
			"type": "default"
		}
	]
}