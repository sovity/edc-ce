/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Issued for a single transfer, calling the given endpoint allows you to directly interact with the data source. Depending on the asset you can pass data to the data source, provide query params or append a custom sub-path.
 * @export
 * @interface EdrDto
 */
export interface EdrDto {
    /**
     * Base URL
     * @type {string}
     * @memberof EdrDto
     */
    baseUrl: string;
    /**
     * Value for the 'Authorization' header.
     * @type {string}
     * @memberof EdrDto
     */
    authorizationHeaderValue: string;
    /**
     * Expiration date of the EDR token or null, if EDR never expires. After expiration you must re-fetch the EDR.
     * @type {Date}
     * @memberof EdrDto
     */
    expiresAt?: Date;
}

/**
 * Check if a given object implements the EdrDto interface.
 */
export function instanceOfEdrDto(value: any): value is EdrDto {
    if (!('baseUrl' in value) || value['baseUrl'] === undefined) return false;
    if (!('authorizationHeaderValue' in value) || value['authorizationHeaderValue'] === undefined) return false;
    return true;
}

export function EdrDtoFromJSON(json: any): EdrDto {
    return EdrDtoFromJSONTyped(json, false);
}

export function EdrDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EdrDto {
    if (json == null) {
        return json;
    }
    return {
        
        'baseUrl': json['baseUrl'],
        'authorizationHeaderValue': json['authorizationHeaderValue'],
        'expiresAt': json['expiresAt'] == null ? undefined : (new Date(json['expiresAt'])),
    };
}

export function EdrDtoToJSON(json: any): EdrDto {
    return EdrDtoToJSONTyped(json, false);
}

export function EdrDtoToJSONTyped(value?: EdrDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'baseUrl': value['baseUrl'],
        'authorizationHeaderValue': value['authorizationHeaderValue'],
        'expiresAt': value['expiresAt'] == null ? undefined : ((value['expiresAt']).toISOString()),
    };
}

