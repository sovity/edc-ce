/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiCriterion } from './UiCriterion';
import {
    UiCriterionFromJSON,
    UiCriterionFromJSONTyped,
    UiCriterionToJSON,
    UiCriterionToJSONTyped,
} from './UiCriterion';

/**
 * Contract Definition List Entry for Contract Definition Page
 * @export
 * @interface ContractDefinitionEntry
 */
export interface ContractDefinitionEntry {
    /**
     * Contract Definition ID
     * @type {string}
     * @memberof ContractDefinitionEntry
     */
    contractDefinitionId: string;
    /**
     * Access Policy ID
     * @type {string}
     * @memberof ContractDefinitionEntry
     */
    accessPolicyId: string;
    /**
     * Contract Policy ID
     * @type {string}
     * @memberof ContractDefinitionEntry
     */
    contractPolicyId: string;
    /**
     * Criteria for the contract
     * @type {Array<UiCriterion>}
     * @memberof ContractDefinitionEntry
     */
    assetSelector: Array<UiCriterion>;
}

/**
 * Check if a given object implements the ContractDefinitionEntry interface.
 */
export function instanceOfContractDefinitionEntry(value: any): value is ContractDefinitionEntry {
    if (!('contractDefinitionId' in value) || value['contractDefinitionId'] === undefined) return false;
    if (!('accessPolicyId' in value) || value['accessPolicyId'] === undefined) return false;
    if (!('contractPolicyId' in value) || value['contractPolicyId'] === undefined) return false;
    if (!('assetSelector' in value) || value['assetSelector'] === undefined) return false;
    return true;
}

export function ContractDefinitionEntryFromJSON(json: any): ContractDefinitionEntry {
    return ContractDefinitionEntryFromJSONTyped(json, false);
}

export function ContractDefinitionEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractDefinitionEntry {
    if (json == null) {
        return json;
    }
    return {
        
        'contractDefinitionId': json['contractDefinitionId'],
        'accessPolicyId': json['accessPolicyId'],
        'contractPolicyId': json['contractPolicyId'],
        'assetSelector': ((json['assetSelector'] as Array<any>).map(UiCriterionFromJSON)),
    };
}

export function ContractDefinitionEntryToJSON(json: any): ContractDefinitionEntry {
    return ContractDefinitionEntryToJSONTyped(json, false);
}

export function ContractDefinitionEntryToJSONTyped(value?: ContractDefinitionEntry | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'contractDefinitionId': value['contractDefinitionId'],
        'accessPolicyId': value['accessPolicyId'],
        'contractPolicyId': value['contractPolicyId'],
        'assetSelector': ((value['assetSelector'] as Array<any>).map(UiCriterionToJSON)),
    };
}

