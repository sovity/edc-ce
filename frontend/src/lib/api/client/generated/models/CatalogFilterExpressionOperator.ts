/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Operator for filter expressions
 * @export
 */
export const CatalogFilterExpressionOperator = {
    Like: 'LIKE',
    Eq: 'EQ',
    In: 'IN'
} as const;
export type CatalogFilterExpressionOperator = typeof CatalogFilterExpressionOperator[keyof typeof CatalogFilterExpressionOperator];


export function instanceOfCatalogFilterExpressionOperator(value: any): boolean {
    for (const key in CatalogFilterExpressionOperator) {
        if (Object.prototype.hasOwnProperty.call(CatalogFilterExpressionOperator, key)) {
            if (CatalogFilterExpressionOperator[key as keyof typeof CatalogFilterExpressionOperator] === value) {
                return true;
            }
        }
    }
    return false;
}

export function CatalogFilterExpressionOperatorFromJSON(json: any): CatalogFilterExpressionOperator {
    return CatalogFilterExpressionOperatorFromJSONTyped(json, false);
}

export function CatalogFilterExpressionOperatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogFilterExpressionOperator {
    return json as CatalogFilterExpressionOperator;
}

export function CatalogFilterExpressionOperatorToJSON(value?: CatalogFilterExpressionOperator | null): any {
    return value as any;
}

export function CatalogFilterExpressionOperatorToJSONTyped(value: any, ignoreDiscriminator: boolean): CatalogFilterExpressionOperator {
    return value as CatalogFilterExpressionOperator;
}

