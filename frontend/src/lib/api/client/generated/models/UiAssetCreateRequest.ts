/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiDataSource } from './UiDataSource';
import {
    UiDataSourceFromJSON,
    UiDataSourceFromJSONTyped,
    UiDataSourceToJSON,
    UiDataSourceToJSONTyped,
} from './UiDataSource';

/**
 * Type-safe data offer metadata for creating an asset as supported by the sovity product landscape. Contains extension points.
 * @export
 * @interface UiAssetCreateRequest
 */
export interface UiAssetCreateRequest {
    /**
     * Data Source
     * @type {UiDataSource}
     * @memberof UiAssetCreateRequest
     */
    dataSource: UiDataSource;
    /**
     * Asset Id
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    id: string;
    /**
     * Asset Title
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    title?: string;
    /**
     * Asset Language
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    language?: string;
    /**
     * Asset Description
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    description?: string;
    /**
     * Asset Homepage
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    publisherHomepage?: string;
    /**
     * License URL
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    licenseUrl?: string;
    /**
     * Version
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    version?: string;
    /**
     * Asset Keywords
     * @type {Array<string>}
     * @memberof UiAssetCreateRequest
     */
    keywords?: Array<string>;
    /**
     * Asset MediaType
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    mediaType?: string;
    /**
     * Landing Page URL
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    landingPageUrl?: string;
    /**
     * Data Category
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    dataCategory?: string;
    /**
     * Data Subcategory
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    dataSubcategory?: string;
    /**
     * Data Model
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    dataModel?: string;
    /**
     * Geo-Reference Method
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    geoReferenceMethod?: string;
    /**
     * Transport Mode
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    transportMode?: string;
    /**
     * The sovereign is distinct from the publisher by being the legal owner of the data.
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    sovereignLegalName?: string;
    /**
     * Geo location
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    geoLocation?: string;
    /**
     * Locations by NUTS standard which divides countries into administrative divisions
     * @type {Array<string>}
     * @memberof UiAssetCreateRequest
     */
    nutsLocations?: Array<string>;
    /**
     * Data sample URLs
     * @type {Array<string>}
     * @memberof UiAssetCreateRequest
     */
    dataSampleUrls?: Array<string>;
    /**
     * Reference file/schema URLs
     * @type {Array<string>}
     * @memberof UiAssetCreateRequest
     */
    referenceFileUrls?: Array<string>;
    /**
     * Additional information on reference files/schemas
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    referenceFilesDescription?: string;
    /**
     * Instructions for use that are not legally relevant e.g. information on how to cite the dataset in papers
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    conditionsForUse?: string;
    /**
     * Data update frequency
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    dataUpdateFrequency?: string;
    /**
     * Temporal coverage start date
     * @type {Date}
     * @memberof UiAssetCreateRequest
     */
    temporalCoverageFrom?: Date;
    /**
     * Temporal coverage end date (inclusive)
     * @type {Date}
     * @memberof UiAssetCreateRequest
     */
    temporalCoverageToInclusive?: Date;
    /**
     * Contains serialized custom properties in the JSON format.
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    customJsonAsString?: string;
    /**
     * Contains serialized custom properties in the JSON LD format. Contrary to the customJsonAsString field, this string must represent a JSON LD object and will be affected by JSON LD compaction and expansion. Due to a technical limitation, the properties can't be booleans.
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    customJsonLdAsString?: string;
    /**
     * Same as customJsonAsString but the data will be stored in the private properties.
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    privateCustomJsonAsString?: string;
    /**
     * Same as customJsonLdAsString but the data will be stored in the private properties. The same limitations apply.
     * @type {string}
     * @memberof UiAssetCreateRequest
     */
    privateCustomJsonLdAsString?: string;
}

/**
 * Check if a given object implements the UiAssetCreateRequest interface.
 */
export function instanceOfUiAssetCreateRequest(value: any): value is UiAssetCreateRequest {
    if (!('dataSource' in value) || value['dataSource'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function UiAssetCreateRequestFromJSON(json: any): UiAssetCreateRequest {
    return UiAssetCreateRequestFromJSONTyped(json, false);
}

export function UiAssetCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiAssetCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'dataSource': UiDataSourceFromJSON(json['dataSource']),
        'id': json['id'],
        'title': json['title'] == null ? undefined : json['title'],
        'language': json['language'] == null ? undefined : json['language'],
        'description': json['description'] == null ? undefined : json['description'],
        'publisherHomepage': json['publisherHomepage'] == null ? undefined : json['publisherHomepage'],
        'licenseUrl': json['licenseUrl'] == null ? undefined : json['licenseUrl'],
        'version': json['version'] == null ? undefined : json['version'],
        'keywords': json['keywords'] == null ? undefined : json['keywords'],
        'mediaType': json['mediaType'] == null ? undefined : json['mediaType'],
        'landingPageUrl': json['landingPageUrl'] == null ? undefined : json['landingPageUrl'],
        'dataCategory': json['dataCategory'] == null ? undefined : json['dataCategory'],
        'dataSubcategory': json['dataSubcategory'] == null ? undefined : json['dataSubcategory'],
        'dataModel': json['dataModel'] == null ? undefined : json['dataModel'],
        'geoReferenceMethod': json['geoReferenceMethod'] == null ? undefined : json['geoReferenceMethod'],
        'transportMode': json['transportMode'] == null ? undefined : json['transportMode'],
        'sovereignLegalName': json['sovereignLegalName'] == null ? undefined : json['sovereignLegalName'],
        'geoLocation': json['geoLocation'] == null ? undefined : json['geoLocation'],
        'nutsLocations': json['nutsLocations'] == null ? undefined : json['nutsLocations'],
        'dataSampleUrls': json['dataSampleUrls'] == null ? undefined : json['dataSampleUrls'],
        'referenceFileUrls': json['referenceFileUrls'] == null ? undefined : json['referenceFileUrls'],
        'referenceFilesDescription': json['referenceFilesDescription'] == null ? undefined : json['referenceFilesDescription'],
        'conditionsForUse': json['conditionsForUse'] == null ? undefined : json['conditionsForUse'],
        'dataUpdateFrequency': json['dataUpdateFrequency'] == null ? undefined : json['dataUpdateFrequency'],
        'temporalCoverageFrom': json['temporalCoverageFrom'] == null ? undefined : (new Date(json['temporalCoverageFrom'])),
        'temporalCoverageToInclusive': json['temporalCoverageToInclusive'] == null ? undefined : (new Date(json['temporalCoverageToInclusive'])),
        'customJsonAsString': json['customJsonAsString'] == null ? undefined : json['customJsonAsString'],
        'customJsonLdAsString': json['customJsonLdAsString'] == null ? undefined : json['customJsonLdAsString'],
        'privateCustomJsonAsString': json['privateCustomJsonAsString'] == null ? undefined : json['privateCustomJsonAsString'],
        'privateCustomJsonLdAsString': json['privateCustomJsonLdAsString'] == null ? undefined : json['privateCustomJsonLdAsString'],
    };
}

export function UiAssetCreateRequestToJSON(json: any): UiAssetCreateRequest {
    return UiAssetCreateRequestToJSONTyped(json, false);
}

export function UiAssetCreateRequestToJSONTyped(value?: UiAssetCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataSource': UiDataSourceToJSON(value['dataSource']),
        'id': value['id'],
        'title': value['title'],
        'language': value['language'],
        'description': value['description'],
        'publisherHomepage': value['publisherHomepage'],
        'licenseUrl': value['licenseUrl'],
        'version': value['version'],
        'keywords': value['keywords'],
        'mediaType': value['mediaType'],
        'landingPageUrl': value['landingPageUrl'],
        'dataCategory': value['dataCategory'],
        'dataSubcategory': value['dataSubcategory'],
        'dataModel': value['dataModel'],
        'geoReferenceMethod': value['geoReferenceMethod'],
        'transportMode': value['transportMode'],
        'sovereignLegalName': value['sovereignLegalName'],
        'geoLocation': value['geoLocation'],
        'nutsLocations': value['nutsLocations'],
        'dataSampleUrls': value['dataSampleUrls'],
        'referenceFileUrls': value['referenceFileUrls'],
        'referenceFilesDescription': value['referenceFilesDescription'],
        'conditionsForUse': value['conditionsForUse'],
        'dataUpdateFrequency': value['dataUpdateFrequency'],
        'temporalCoverageFrom': value['temporalCoverageFrom'] == null ? undefined : ((value['temporalCoverageFrom']).toISOString().substring(0,10)),
        'temporalCoverageToInclusive': value['temporalCoverageToInclusive'] == null ? undefined : ((value['temporalCoverageToInclusive']).toISOString().substring(0,10)),
        'customJsonAsString': value['customJsonAsString'],
        'customJsonLdAsString': value['customJsonLdAsString'],
        'privateCustomJsonAsString': value['privateCustomJsonAsString'],
        'privateCustomJsonLdAsString': value['privateCustomJsonLdAsString'],
    };
}

