/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DashboardCxDidConfig } from './DashboardCxDidConfig';
import {
    DashboardCxDidConfigFromJSON,
    DashboardCxDidConfigFromJSONTyped,
    DashboardCxDidConfigToJSON,
    DashboardCxDidConfigToJSONTyped,
} from './DashboardCxDidConfig';
import type { DashboardDapsConfig } from './DashboardDapsConfig';
import {
    DashboardDapsConfigFromJSON,
    DashboardDapsConfigFromJSONTyped,
    DashboardDapsConfigToJSON,
    DashboardDapsConfigToJSONTyped,
} from './DashboardDapsConfig';
import type { DashboardTransferAmounts } from './DashboardTransferAmounts';
import {
    DashboardTransferAmountsFromJSON,
    DashboardTransferAmountsFromJSONTyped,
    DashboardTransferAmountsToJSON,
    DashboardTransferAmountsToJSONTyped,
} from './DashboardTransferAmounts';

/**
 * Data as required by the UI's Dashboard Page
 * @export
 * @interface DashboardPage
 */
export interface DashboardPage {
    /**
     * Number of Assets
     * @type {number}
     * @memberof DashboardPage
     */
    numAssets: number;
    /**
     * Number of Policies
     * @type {number}
     * @memberof DashboardPage
     */
    numPolicies: number;
    /**
     * Number of Contract Definitions
     * @type {number}
     * @memberof DashboardPage
     */
    numContractDefinitions: number;
    /**
     * Number of consuming Contract Agreements
     * @type {number}
     * @memberof DashboardPage
     */
    numContractAgreementsConsuming: number;
    /**
     * Number of providing Contract Agreements
     * @type {number}
     * @memberof DashboardPage
     */
    numContractAgreementsProviding: number;
    /**
     * Consuming Transfer Process Amounts
     * @type {DashboardTransferAmounts}
     * @memberof DashboardPage
     */
    transferProcessesConsuming: DashboardTransferAmounts;
    /**
     * Providing Transfer Process Amounts
     * @type {DashboardTransferAmounts}
     * @memberof DashboardPage
     */
    transferProcessesProviding: DashboardTransferAmounts;
    /**
     * Your Connector's Management API URL for API Users
     * @type {string}
     * @memberof DashboardPage
     */
    managementApiUrlShownInDashboard: string;
    /**
     * Your Connector's Connector Endpoint
     * @type {string}
     * @memberof DashboardPage
     */
    connectorEndpoint: string;
    /**
     * Your Connector's Participant ID
     * @type {string}
     * @memberof DashboardPage
     */
    connectorParticipantId: string;
    /**
     * Your Connector's Title
     * @type {string}
     * @memberof DashboardPage
     */
    connectorTitle: string;
    /**
     * Your Connector's Description
     * @type {string}
     * @memberof DashboardPage
     */
    connectorDescription: string;
    /**
     * Your Organization Homepage
     * @type {string}
     * @memberof DashboardPage
     */
    connectorCuratorUrl: string;
    /**
     * Your Organization Name
     * @type {string}
     * @memberof DashboardPage
     */
    connectorCuratorName: string;
    /**
     * Your Connector's Maintainer's Organization Homepage
     * @type {string}
     * @memberof DashboardPage
     */
    connectorMaintainerUrl: string;
    /**
     * Your Connector's Maintainer's Organization Name
     * @type {string}
     * @memberof DashboardPage
     */
    connectorMaintainerName: string;
    /**
     * Your Connector's DAPS Configuration (if present)
     * @type {DashboardDapsConfig}
     * @memberof DashboardPage
     */
    connectorDapsConfig?: DashboardDapsConfig;
    /**
     * Your Connector's Catena-X Web-DID Configuration (if present)
     * @type {DashboardCxDidConfig}
     * @memberof DashboardPage
     */
    connectorCxDidConfig?: DashboardCxDidConfig;
}

/**
 * Check if a given object implements the DashboardPage interface.
 */
export function instanceOfDashboardPage(value: any): value is DashboardPage {
    if (!('numAssets' in value) || value['numAssets'] === undefined) return false;
    if (!('numPolicies' in value) || value['numPolicies'] === undefined) return false;
    if (!('numContractDefinitions' in value) || value['numContractDefinitions'] === undefined) return false;
    if (!('numContractAgreementsConsuming' in value) || value['numContractAgreementsConsuming'] === undefined) return false;
    if (!('numContractAgreementsProviding' in value) || value['numContractAgreementsProviding'] === undefined) return false;
    if (!('transferProcessesConsuming' in value) || value['transferProcessesConsuming'] === undefined) return false;
    if (!('transferProcessesProviding' in value) || value['transferProcessesProviding'] === undefined) return false;
    if (!('managementApiUrlShownInDashboard' in value) || value['managementApiUrlShownInDashboard'] === undefined) return false;
    if (!('connectorEndpoint' in value) || value['connectorEndpoint'] === undefined) return false;
    if (!('connectorParticipantId' in value) || value['connectorParticipantId'] === undefined) return false;
    if (!('connectorTitle' in value) || value['connectorTitle'] === undefined) return false;
    if (!('connectorDescription' in value) || value['connectorDescription'] === undefined) return false;
    if (!('connectorCuratorUrl' in value) || value['connectorCuratorUrl'] === undefined) return false;
    if (!('connectorCuratorName' in value) || value['connectorCuratorName'] === undefined) return false;
    if (!('connectorMaintainerUrl' in value) || value['connectorMaintainerUrl'] === undefined) return false;
    if (!('connectorMaintainerName' in value) || value['connectorMaintainerName'] === undefined) return false;
    return true;
}

export function DashboardPageFromJSON(json: any): DashboardPage {
    return DashboardPageFromJSONTyped(json, false);
}

export function DashboardPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): DashboardPage {
    if (json == null) {
        return json;
    }
    return {
        
        'numAssets': json['numAssets'],
        'numPolicies': json['numPolicies'],
        'numContractDefinitions': json['numContractDefinitions'],
        'numContractAgreementsConsuming': json['numContractAgreementsConsuming'],
        'numContractAgreementsProviding': json['numContractAgreementsProviding'],
        'transferProcessesConsuming': DashboardTransferAmountsFromJSON(json['transferProcessesConsuming']),
        'transferProcessesProviding': DashboardTransferAmountsFromJSON(json['transferProcessesProviding']),
        'managementApiUrlShownInDashboard': json['managementApiUrlShownInDashboard'],
        'connectorEndpoint': json['connectorEndpoint'],
        'connectorParticipantId': json['connectorParticipantId'],
        'connectorTitle': json['connectorTitle'],
        'connectorDescription': json['connectorDescription'],
        'connectorCuratorUrl': json['connectorCuratorUrl'],
        'connectorCuratorName': json['connectorCuratorName'],
        'connectorMaintainerUrl': json['connectorMaintainerUrl'],
        'connectorMaintainerName': json['connectorMaintainerName'],
        'connectorDapsConfig': json['connectorDapsConfig'] == null ? undefined : DashboardDapsConfigFromJSON(json['connectorDapsConfig']),
        'connectorCxDidConfig': json['connectorCxDidConfig'] == null ? undefined : DashboardCxDidConfigFromJSON(json['connectorCxDidConfig']),
    };
}

export function DashboardPageToJSON(json: any): DashboardPage {
    return DashboardPageToJSONTyped(json, false);
}

export function DashboardPageToJSONTyped(value?: DashboardPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'numAssets': value['numAssets'],
        'numPolicies': value['numPolicies'],
        'numContractDefinitions': value['numContractDefinitions'],
        'numContractAgreementsConsuming': value['numContractAgreementsConsuming'],
        'numContractAgreementsProviding': value['numContractAgreementsProviding'],
        'transferProcessesConsuming': DashboardTransferAmountsToJSON(value['transferProcessesConsuming']),
        'transferProcessesProviding': DashboardTransferAmountsToJSON(value['transferProcessesProviding']),
        'managementApiUrlShownInDashboard': value['managementApiUrlShownInDashboard'],
        'connectorEndpoint': value['connectorEndpoint'],
        'connectorParticipantId': value['connectorParticipantId'],
        'connectorTitle': value['connectorTitle'],
        'connectorDescription': value['connectorDescription'],
        'connectorCuratorUrl': value['connectorCuratorUrl'],
        'connectorCuratorName': value['connectorCuratorName'],
        'connectorMaintainerUrl': value['connectorMaintainerUrl'],
        'connectorMaintainerName': value['connectorMaintainerName'],
        'connectorDapsConfig': DashboardDapsConfigToJSON(value['connectorDapsConfig']),
        'connectorCxDidConfig': DashboardCxDidConfigToJSON(value['connectorCxDidConfig']),
    };
}

