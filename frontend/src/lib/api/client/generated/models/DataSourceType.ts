/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Supported Data Source Types by UiDataSource
 * @export
 */
export const DataSourceType = {
    HttpData: 'HTTP_DATA',
    OnRequest: 'ON_REQUEST',
    Custom: 'CUSTOM'
} as const;
export type DataSourceType = typeof DataSourceType[keyof typeof DataSourceType];


export function instanceOfDataSourceType(value: any): boolean {
    for (const key in DataSourceType) {
        if (Object.prototype.hasOwnProperty.call(DataSourceType, key)) {
            if (DataSourceType[key as keyof typeof DataSourceType] === value) {
                return true;
            }
        }
    }
    return false;
}

export function DataSourceTypeFromJSON(json: any): DataSourceType {
    return DataSourceTypeFromJSONTyped(json, false);
}

export function DataSourceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSourceType {
    return json as DataSourceType;
}

export function DataSourceTypeToJSON(value?: DataSourceType | null): any {
    return value as any;
}

export function DataSourceTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): DataSourceType {
    return value as DataSourceType;
}

