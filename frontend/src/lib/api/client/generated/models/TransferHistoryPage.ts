/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TransferHistoryEntry } from './TransferHistoryEntry';
import {
    TransferHistoryEntryFromJSON,
    TransferHistoryEntryFromJSONTyped,
    TransferHistoryEntryToJSON,
    TransferHistoryEntryToJSONTyped,
} from './TransferHistoryEntry';

/**
 * Data as required by the UI's Transfer History Page
 * @export
 * @interface TransferHistoryPage
 */
export interface TransferHistoryPage {
    /**
     * Transfer History Page Entries
     * @type {Array<TransferHistoryEntry>}
     * @memberof TransferHistoryPage
     */
    transferEntries: Array<TransferHistoryEntry>;
}

/**
 * Check if a given object implements the TransferHistoryPage interface.
 */
export function instanceOfTransferHistoryPage(value: any): value is TransferHistoryPage {
    if (!('transferEntries' in value) || value['transferEntries'] === undefined) return false;
    return true;
}

export function TransferHistoryPageFromJSON(json: any): TransferHistoryPage {
    return TransferHistoryPageFromJSONTyped(json, false);
}

export function TransferHistoryPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransferHistoryPage {
    if (json == null) {
        return json;
    }
    return {
        
        'transferEntries': ((json['transferEntries'] as Array<any>).map(TransferHistoryEntryFromJSON)),
    };
}

export function TransferHistoryPageToJSON(json: any): TransferHistoryPage {
    return TransferHistoryPageToJSONTyped(json, false);
}

export function TransferHistoryPageToJSONTyped(value?: TransferHistoryPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'transferEntries': ((value['transferEntries'] as Array<any>).map(TransferHistoryEntryToJSON)),
    };
}

