/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SortByRequestAssetsPageSortProperty } from './SortByRequestAssetsPageSortProperty';
import {
    SortByRequestAssetsPageSortPropertyFromJSON,
    SortByRequestAssetsPageSortPropertyFromJSONTyped,
    SortByRequestAssetsPageSortPropertyToJSON,
    SortByRequestAssetsPageSortPropertyToJSONTyped,
} from './SortByRequestAssetsPageSortProperty';
import type { PaginationRequest } from './PaginationRequest';
import {
    PaginationRequestFromJSON,
    PaginationRequestFromJSONTyped,
    PaginationRequestToJSON,
    PaginationRequestToJSONTyped,
} from './PaginationRequest';

/**
 * Properties to filter and sort the assets page
 * @export
 * @interface AssetsPageRequest
 */
export interface AssetsPageRequest {
    /**
     * Pagination
     * @type {PaginationRequest}
     * @memberof AssetsPageRequest
     */
    pagination?: PaginationRequest;
    /**
     * Query for filtering. If empty, show all entries
     * @type {string}
     * @memberof AssetsPageRequest
     */
    searchText?: string;
    /**
     * Sort List by properties in order of appearance in the array.
     * @type {Array<SortByRequestAssetsPageSortProperty>}
     * @memberof AssetsPageRequest
     */
    sortBy?: Array<SortByRequestAssetsPageSortProperty>;
}

/**
 * Check if a given object implements the AssetsPageRequest interface.
 */
export function instanceOfAssetsPageRequest(value: any): value is AssetsPageRequest {
    return true;
}

export function AssetsPageRequestFromJSON(json: any): AssetsPageRequest {
    return AssetsPageRequestFromJSONTyped(json, false);
}

export function AssetsPageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetsPageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'pagination': json['pagination'] == null ? undefined : PaginationRequestFromJSON(json['pagination']),
        'searchText': json['searchText'] == null ? undefined : json['searchText'],
        'sortBy': json['sortBy'] == null ? undefined : ((json['sortBy'] as Array<any>).map(SortByRequestAssetsPageSortPropertyFromJSON)),
    };
}

export function AssetsPageRequestToJSON(json: any): AssetsPageRequest {
    return AssetsPageRequestToJSONTyped(json, false);
}

export function AssetsPageRequestToJSONTyped(value?: AssetsPageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'pagination': PaginationRequestToJSON(value['pagination']),
        'searchText': value['searchText'],
        'sortBy': value['sortBy'] == null ? undefined : ((value['sortBy'] as Array<any>).map(SortByRequestAssetsPageSortPropertyToJSON)),
    };
}

