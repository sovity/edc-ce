/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataSourceAvailability } from './DataSourceAvailability';
import {
    DataSourceAvailabilityFromJSON,
    DataSourceAvailabilityFromJSONTyped,
    DataSourceAvailabilityToJSON,
    DataSourceAvailabilityToJSONTyped,
} from './DataSourceAvailability';

/**
 * Type-safe data offer metadata as supported by the sovity product landscape. Contains extension points.
 * @export
 * @interface UiAsset
 */
export interface UiAsset {
    /**
     * 'Live' vs 'On Request'
     * @type {DataSourceAvailability}
     * @memberof UiAsset
     */
    dataSourceAvailability: DataSourceAvailability;
    /**
     * Asset Id
     * @type {string}
     * @memberof UiAsset
     */
    assetId: string;
    /**
     * Providing Connector's Connector Endpoint
     * @type {string}
     * @memberof UiAsset
     */
    connectorEndpoint: string;
    /**
     * Providing Connector's Participant ID
     * @type {string}
     * @memberof UiAsset
     */
    participantId: string;
    /**
     * Asset Title
     * @type {string}
     * @memberof UiAsset
     */
    title: string;
    /**
     * Asset Organization Name
     * @type {string}
     * @memberof UiAsset
     */
    creatorOrganizationName: string;
    /**
     * Contact E-Mail address. Only for dataSourceAvailability ON_REQUEST.
     * @type {string}
     * @memberof UiAsset
     */
    onRequestContactEmail?: string;
    /**
     * Contact Preferred E-Mail Subject. Only for dataSourceAvailability ON_REQUEST.
     * @type {string}
     * @memberof UiAsset
     */
    onRequestContactEmailSubject?: string;
    /**
     * Asset Language
     * @type {string}
     * @memberof UiAsset
     */
    language?: string;
    /**
     * Asset Description. Supports markdown.
     * @type {string}
     * @memberof UiAsset
     */
    description?: string;
    /**
     * Asset Description Short Text generated from description. Contains no markdown.
     * @type {string}
     * @memberof UiAsset
     */
    descriptionShortText?: string;
    /**
     * Flag that indicates whether this asset is created by this connector.
     * @type {boolean}
     * @memberof UiAsset
     */
    isOwnConnector: boolean;
    /**
     * Asset Homepage
     * @type {string}
     * @memberof UiAsset
     */
    publisherHomepage?: string;
    /**
     * License URL
     * @type {string}
     * @memberof UiAsset
     */
    licenseUrl?: string;
    /**
     * Version
     * @type {string}
     * @memberof UiAsset
     */
    version?: string;
    /**
     * Asset Keywords
     * @type {Array<string>}
     * @memberof UiAsset
     */
    keywords?: Array<string>;
    /**
     * Asset MediaType
     * @type {string}
     * @memberof UiAsset
     */
    mediaType?: string;
    /**
     * Homepage URL associated with the Asset
     * @type {string}
     * @memberof UiAsset
     */
    landingPageUrl?: string;
    /**
     * HTTP Datasource Hint: Proxy Method. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
     * @type {boolean}
     * @memberof UiAsset
     */
    httpDatasourceHintsProxyMethod?: boolean;
    /**
     * HTTP Datasource Hint: Proxy Path. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
     * @type {boolean}
     * @memberof UiAsset
     */
    httpDatasourceHintsProxyPath?: boolean;
    /**
     * HTTP Datasource Hint: Proxy Query Params. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
     * @type {boolean}
     * @memberof UiAsset
     */
    httpDatasourceHintsProxyQueryParams?: boolean;
    /**
     * HTTP Datasource Hint: Proxy Body. Only for dataSourceAvailability LIVE with an underlying HTTP_DATA Data Source.
     * @type {boolean}
     * @memberof UiAsset
     */
    httpDatasourceHintsProxyBody?: boolean;
    /**
     * Data Category
     * @type {string}
     * @memberof UiAsset
     */
    dataCategory?: string;
    /**
     * Data Subcategory
     * @type {string}
     * @memberof UiAsset
     */
    dataSubcategory?: string;
    /**
     * Data Model
     * @type {string}
     * @memberof UiAsset
     */
    dataModel?: string;
    /**
     * Geo-Reference Method
     * @type {string}
     * @memberof UiAsset
     */
    geoReferenceMethod?: string;
    /**
     * Transport Mode
     * @type {string}
     * @memberof UiAsset
     */
    transportMode?: string;
    /**
     * The sovereign is distinct from the publisher by being the legal owner of the data.
     * @type {string}
     * @memberof UiAsset
     */
    sovereignLegalName?: string;
    /**
     * Geo location
     * @type {string}
     * @memberof UiAsset
     */
    geoLocation?: string;
    /**
     * Locations by NUTS standard which divides countries into administrative divisions
     * @type {Array<string>}
     * @memberof UiAsset
     */
    nutsLocations?: Array<string>;
    /**
     * Data sample URLs
     * @type {Array<string>}
     * @memberof UiAsset
     */
    dataSampleUrls?: Array<string>;
    /**
     * Reference file/schema URLs
     * @type {Array<string>}
     * @memberof UiAsset
     */
    referenceFileUrls?: Array<string>;
    /**
     * Additional information on reference files/schemas
     * @type {string}
     * @memberof UiAsset
     */
    referenceFilesDescription?: string;
    /**
     * Instructions for use that are not legally relevant e.g. information on how to cite the dataset in papers
     * @type {string}
     * @memberof UiAsset
     */
    conditionsForUse?: string;
    /**
     * Data update frequency
     * @type {string}
     * @memberof UiAsset
     */
    dataUpdateFrequency?: string;
    /**
     * Temporal coverage start date
     * @type {Date}
     * @memberof UiAsset
     */
    temporalCoverageFrom?: Date;
    /**
     * Temporal coverage end date (inclusive)
     * @type {Date}
     * @memberof UiAsset
     */
    temporalCoverageToInclusive?: Date;
    /**
     * Contains the entire asset in the JSON-LD format
     * @type {string}
     * @memberof UiAsset
     */
    assetJsonLd?: string;
    /**
     * Contains serialized custom properties in the JSON format.
     * @type {string}
     * @memberof UiAsset
     */
    customJsonAsString?: string;
    /**
     * Contains serialized custom properties in the JSON LD format. Contrary to the customJsonAsString field, this string must represent a JSON LD object and will be affected by JSON LD compaction and expansion. Due to a technical limitation, the properties can't be booleans.
     * @type {string}
     * @memberof UiAsset
     */
    customJsonLdAsString?: string;
    /**
     * Same as customJsonAsString but the data will be stored in the private properties.
     * @type {string}
     * @memberof UiAsset
     */
    privateCustomJsonAsString?: string;
    /**
     * Same as customJsonLdAsString but the data will be stored in the private properties. The same limitations apply.
     * @type {string}
     * @memberof UiAsset
     */
    privateCustomJsonLdAsString?: string;
}



/**
 * Check if a given object implements the UiAsset interface.
 */
export function instanceOfUiAsset(value: any): value is UiAsset {
    if (!('dataSourceAvailability' in value) || value['dataSourceAvailability'] === undefined) return false;
    if (!('assetId' in value) || value['assetId'] === undefined) return false;
    if (!('connectorEndpoint' in value) || value['connectorEndpoint'] === undefined) return false;
    if (!('participantId' in value) || value['participantId'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('creatorOrganizationName' in value) || value['creatorOrganizationName'] === undefined) return false;
    if (!('isOwnConnector' in value) || value['isOwnConnector'] === undefined) return false;
    return true;
}

export function UiAssetFromJSON(json: any): UiAsset {
    return UiAssetFromJSONTyped(json, false);
}

export function UiAssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiAsset {
    if (json == null) {
        return json;
    }
    return {
        
        'dataSourceAvailability': DataSourceAvailabilityFromJSON(json['dataSourceAvailability']),
        'assetId': json['assetId'],
        'connectorEndpoint': json['connectorEndpoint'],
        'participantId': json['participantId'],
        'title': json['title'],
        'creatorOrganizationName': json['creatorOrganizationName'],
        'onRequestContactEmail': json['onRequestContactEmail'] == null ? undefined : json['onRequestContactEmail'],
        'onRequestContactEmailSubject': json['onRequestContactEmailSubject'] == null ? undefined : json['onRequestContactEmailSubject'],
        'language': json['language'] == null ? undefined : json['language'],
        'description': json['description'] == null ? undefined : json['description'],
        'descriptionShortText': json['descriptionShortText'] == null ? undefined : json['descriptionShortText'],
        'isOwnConnector': json['isOwnConnector'],
        'publisherHomepage': json['publisherHomepage'] == null ? undefined : json['publisherHomepage'],
        'licenseUrl': json['licenseUrl'] == null ? undefined : json['licenseUrl'],
        'version': json['version'] == null ? undefined : json['version'],
        'keywords': json['keywords'] == null ? undefined : json['keywords'],
        'mediaType': json['mediaType'] == null ? undefined : json['mediaType'],
        'landingPageUrl': json['landingPageUrl'] == null ? undefined : json['landingPageUrl'],
        'httpDatasourceHintsProxyMethod': json['httpDatasourceHintsProxyMethod'] == null ? undefined : json['httpDatasourceHintsProxyMethod'],
        'httpDatasourceHintsProxyPath': json['httpDatasourceHintsProxyPath'] == null ? undefined : json['httpDatasourceHintsProxyPath'],
        'httpDatasourceHintsProxyQueryParams': json['httpDatasourceHintsProxyQueryParams'] == null ? undefined : json['httpDatasourceHintsProxyQueryParams'],
        'httpDatasourceHintsProxyBody': json['httpDatasourceHintsProxyBody'] == null ? undefined : json['httpDatasourceHintsProxyBody'],
        'dataCategory': json['dataCategory'] == null ? undefined : json['dataCategory'],
        'dataSubcategory': json['dataSubcategory'] == null ? undefined : json['dataSubcategory'],
        'dataModel': json['dataModel'] == null ? undefined : json['dataModel'],
        'geoReferenceMethod': json['geoReferenceMethod'] == null ? undefined : json['geoReferenceMethod'],
        'transportMode': json['transportMode'] == null ? undefined : json['transportMode'],
        'sovereignLegalName': json['sovereignLegalName'] == null ? undefined : json['sovereignLegalName'],
        'geoLocation': json['geoLocation'] == null ? undefined : json['geoLocation'],
        'nutsLocations': json['nutsLocations'] == null ? undefined : json['nutsLocations'],
        'dataSampleUrls': json['dataSampleUrls'] == null ? undefined : json['dataSampleUrls'],
        'referenceFileUrls': json['referenceFileUrls'] == null ? undefined : json['referenceFileUrls'],
        'referenceFilesDescription': json['referenceFilesDescription'] == null ? undefined : json['referenceFilesDescription'],
        'conditionsForUse': json['conditionsForUse'] == null ? undefined : json['conditionsForUse'],
        'dataUpdateFrequency': json['dataUpdateFrequency'] == null ? undefined : json['dataUpdateFrequency'],
        'temporalCoverageFrom': json['temporalCoverageFrom'] == null ? undefined : (new Date(json['temporalCoverageFrom'])),
        'temporalCoverageToInclusive': json['temporalCoverageToInclusive'] == null ? undefined : (new Date(json['temporalCoverageToInclusive'])),
        'assetJsonLd': json['assetJsonLd'] == null ? undefined : json['assetJsonLd'],
        'customJsonAsString': json['customJsonAsString'] == null ? undefined : json['customJsonAsString'],
        'customJsonLdAsString': json['customJsonLdAsString'] == null ? undefined : json['customJsonLdAsString'],
        'privateCustomJsonAsString': json['privateCustomJsonAsString'] == null ? undefined : json['privateCustomJsonAsString'],
        'privateCustomJsonLdAsString': json['privateCustomJsonLdAsString'] == null ? undefined : json['privateCustomJsonLdAsString'],
    };
}

export function UiAssetToJSON(json: any): UiAsset {
    return UiAssetToJSONTyped(json, false);
}

export function UiAssetToJSONTyped(value?: UiAsset | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'dataSourceAvailability': DataSourceAvailabilityToJSON(value['dataSourceAvailability']),
        'assetId': value['assetId'],
        'connectorEndpoint': value['connectorEndpoint'],
        'participantId': value['participantId'],
        'title': value['title'],
        'creatorOrganizationName': value['creatorOrganizationName'],
        'onRequestContactEmail': value['onRequestContactEmail'],
        'onRequestContactEmailSubject': value['onRequestContactEmailSubject'],
        'language': value['language'],
        'description': value['description'],
        'descriptionShortText': value['descriptionShortText'],
        'isOwnConnector': value['isOwnConnector'],
        'publisherHomepage': value['publisherHomepage'],
        'licenseUrl': value['licenseUrl'],
        'version': value['version'],
        'keywords': value['keywords'],
        'mediaType': value['mediaType'],
        'landingPageUrl': value['landingPageUrl'],
        'httpDatasourceHintsProxyMethod': value['httpDatasourceHintsProxyMethod'],
        'httpDatasourceHintsProxyPath': value['httpDatasourceHintsProxyPath'],
        'httpDatasourceHintsProxyQueryParams': value['httpDatasourceHintsProxyQueryParams'],
        'httpDatasourceHintsProxyBody': value['httpDatasourceHintsProxyBody'],
        'dataCategory': value['dataCategory'],
        'dataSubcategory': value['dataSubcategory'],
        'dataModel': value['dataModel'],
        'geoReferenceMethod': value['geoReferenceMethod'],
        'transportMode': value['transportMode'],
        'sovereignLegalName': value['sovereignLegalName'],
        'geoLocation': value['geoLocation'],
        'nutsLocations': value['nutsLocations'],
        'dataSampleUrls': value['dataSampleUrls'],
        'referenceFileUrls': value['referenceFileUrls'],
        'referenceFilesDescription': value['referenceFilesDescription'],
        'conditionsForUse': value['conditionsForUse'],
        'dataUpdateFrequency': value['dataUpdateFrequency'],
        'temporalCoverageFrom': value['temporalCoverageFrom'] == null ? undefined : ((value['temporalCoverageFrom']).toISOString().substring(0,10)),
        'temporalCoverageToInclusive': value['temporalCoverageToInclusive'] == null ? undefined : ((value['temporalCoverageToInclusive']).toISOString().substring(0,10)),
        'assetJsonLd': value['assetJsonLd'],
        'customJsonAsString': value['customJsonAsString'],
        'customJsonLdAsString': value['customJsonLdAsString'],
        'privateCustomJsonAsString': value['privateCustomJsonAsString'],
        'privateCustomJsonLdAsString': value['privateCustomJsonLdAsString'],
    };
}

