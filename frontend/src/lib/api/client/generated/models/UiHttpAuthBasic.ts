/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Basic Auth as defined in RFC 7617. This is a wrapper for setting the header as Authorization: Basic Zm9vOnBhc3N3b3Jk. Using basic auth is not recommended in general for security reasons, but it is also not recommended because the secret will be saved in the database rather than the vault.
 * @export
 * @interface UiHttpAuthBasic
 */
export interface UiHttpAuthBasic {
    /**
     * The username
     * @type {string}
     * @memberof UiHttpAuthBasic
     */
    username: string;
    /**
     * The password
     * @type {string}
     * @memberof UiHttpAuthBasic
     */
    password: string;
}

/**
 * Check if a given object implements the UiHttpAuthBasic interface.
 */
export function instanceOfUiHttpAuthBasic(value: any): value is UiHttpAuthBasic {
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    return true;
}

export function UiHttpAuthBasicFromJSON(json: any): UiHttpAuthBasic {
    return UiHttpAuthBasicFromJSONTyped(json, false);
}

export function UiHttpAuthBasicFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiHttpAuthBasic {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'],
        'password': json['password'],
    };
}

export function UiHttpAuthBasicToJSON(json: any): UiHttpAuthBasic {
    return UiHttpAuthBasicToJSONTyped(json, false);
}

export function UiHttpAuthBasicToJSONTyped(value?: UiHttpAuthBasic | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'password': value['password'],
    };
}

