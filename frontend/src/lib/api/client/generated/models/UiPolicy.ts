/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiPolicyExpression } from './UiPolicyExpression';
import {
    UiPolicyExpressionFromJSON,
    UiPolicyExpressionFromJSONTyped,
    UiPolicyExpressionToJSON,
    UiPolicyExpressionToJSONTyped,
} from './UiPolicyExpression';

/**
 * Type-Safe OpenAPI generator friendly ODLR policy subset as endorsed by sovity.
 * @export
 * @interface UiPolicy
 */
export interface UiPolicy {
    /**
     * EDC Policy JSON-LD. This is required because the EDC requires the full policy when initiating contract negotiations.
     * @type {string}
     * @memberof UiPolicy
     */
    policyJsonLd: string;
    /**
     * Policy expression
     * @type {UiPolicyExpression}
     * @memberof UiPolicy
     */
    expression?: UiPolicyExpression;
    /**
     * When trying to reduce the policy JSON-LD to our opinionated subset of functionalities, many fields and functionalities are unsupported. Should any discrepancies occur during the mapping process, we'll collect them here.
     * @type {Array<string>}
     * @memberof UiPolicy
     */
    errors: Array<string>;
}

/**
 * Check if a given object implements the UiPolicy interface.
 */
export function instanceOfUiPolicy(value: any): value is UiPolicy {
    if (!('policyJsonLd' in value) || value['policyJsonLd'] === undefined) return false;
    if (!('errors' in value) || value['errors'] === undefined) return false;
    return true;
}

export function UiPolicyFromJSON(json: any): UiPolicy {
    return UiPolicyFromJSONTyped(json, false);
}

export function UiPolicyFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiPolicy {
    if (json == null) {
        return json;
    }
    return {
        
        'policyJsonLd': json['policyJsonLd'],
        'expression': json['expression'] == null ? undefined : UiPolicyExpressionFromJSON(json['expression']),
        'errors': json['errors'],
    };
}

export function UiPolicyToJSON(json: any): UiPolicy {
    return UiPolicyToJSONTyped(json, false);
}

export function UiPolicyToJSONTyped(value?: UiPolicy | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'policyJsonLd': value['policyJsonLd'],
        'expression': UiPolicyExpressionToJSON(value['expression']),
        'errors': value['errors'],
    };
}

