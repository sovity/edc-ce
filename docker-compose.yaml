version: "3.8"
services:
  edc-ui:
    image: ${EDC_UI_IMAGE}
    ports:
      - '11000:80'
    environment:
      - EDC_UI_ACTIVE_PROFILE=${EDC_UI_ACTIVE_PROFILE}
      - EDC_UI_CONFIG_URL=edc-ui-config
      - EDC_UI_DATA_MANAGEMENT_API_URL=http://localhost:11002/api/v1/management
      - EDC_UI_DATA_MANAGEMENT_API_KEY=ApiKeyDefaultValue
      - EDC_UI_CATALOG_URLS=http://edc2:11003/api/v1/ids/data

  edc:
    image: ${EDC_IMAGE}
    depends_on:
      - postgresql
    environment:
      MY_EDC_NAME_KEBAB_CASE: "example-connector"
      MY_EDC_TITLE: "EDC Connector"
      MY_EDC_DESCRIPTION: "sovity Community Edition EDC Connector"
      MY_EDC_CURATOR_URL: "https://example.com"
      MY_EDC_CURATOR_NAME: "Example GmbH"
      MY_EDC_MAINTAINER_URL: "https://sovity.de"
      MY_EDC_MAINTAINER_NAME: "sovity GmbH"

      MY_EDC_FQDN: "edc"
      EDC_API_AUTH_KEY: ApiKeyDefaultValue # Management API Key

      MY_EDC_JDBC_URL: jdbc:postgresql://postgresql:5432/edc
      MY_EDC_JDBC_USER: edc
      MY_EDC_JDBC_PASSWORD: edc

      # docker compose local dev environment overrides (don't use with non-dev images)
      MY_EDC_PROTOCOL: "http://"
      MY_EDC_IDS_BASE_URL: "http://edc:11003"
      EDC_WEB_REST_CORS_ENABLED: 'true'
      EDC_WEB_REST_CORS_HEADERS: 'origin,content-type,accept,authorization,x-api-key'
      EDC_WEB_REST_CORS_ORIGINS: '*'
    ports:
      - '11001:11001'
      - '11002:11002'
      - '11003:11003'
      - '11004:11004'
      - '11005:5005'
    volumes:
      - ./docs/getting-started/secrets:/secrets

  edc-ui2:
    image: ${EDC_UI_IMAGE}
    ports:
      - '22000:80'
    environment:
      - EDC_UI_ACTIVE_PROFILE=${EDC_UI_ACTIVE_PROFILE}
      - EDC_UI_CONFIG_URL=edc-ui-config
      - EDC_UI_DATA_MANAGEMENT_API_URL=http://localhost:22002/api/v1/management
      - EDC_UI_DATA_MANAGEMENT_API_KEY=ApiKeyDefaultValue
      - EDC_UI_CATALOG_URLS=http://edc:11003/api/v1/ids/data

  edc2:
    image: ${EDC_IMAGE}
    depends_on:
      - postgresql2
    environment:
      MY_EDC_NAME_KEBAB_CASE: "edc2"
      MY_EDC_TITLE: "EDC Connector"
      MY_EDC_DESCRIPTION: "sovity Community Edition EDC Connector"
      MY_EDC_CURATOR_URL: "https://example.com"
      MY_EDC_CURATOR_NAME: "Example GmbH"
      MY_EDC_MAINTAINER_URL: "https://sovity.de"
      MY_EDC_MAINTAINER_NAME: "sovity GmbH"

      MY_EDC_FQDN: "edc2"
      EDC_API_AUTH_KEY: ApiKeyDefaultValue # Management API Key

      MY_EDC_JDBC_URL: jdbc:postgresql://postgresql2:5432/edc
      MY_EDC_JDBC_USER: edc
      MY_EDC_JDBC_PASSWORD: edc

      # docker compose local dev environment overrides (don't use with non-dev images)
      MY_EDC_PROTOCOL: "http://"
      MY_EDC_IDS_BASE_URL: "http://edc2:11003"
      EDC_WEB_REST_CORS_ENABLED: 'true'
      EDC_WEB_REST_CORS_HEADERS: 'origin,content-type,accept,authorization,x-api-key'
      EDC_WEB_REST_CORS_ORIGINS: '*'
    ports:
      - '22001:11001'
      - '22002:11002'
      - '22003:11003'
      - '22004:11004'
      - '22005:5005'
    volumes:
      - ./docs/getting-started/secrets:/secrets

  postgresql:
    image: docker.io/bitnami/postgresql:11
    restart: always
    environment:
      POSTGRESQL_USERNAME: edc
      POSTGRESQL_PASSWORD: edc
      POSTGRESQL_DATABASE: edc
    ports:
      - '11543:5432'
    volumes:
      - 'postgresql:/bitnami/postgresql'

  postgresql2:
    image: docker.io/bitnami/postgresql:11
    restart: always
    environment:
      POSTGRESQL_USERNAME: edc
      POSTGRESQL_PASSWORD: edc
      POSTGRESQL_DATABASE: edc
    ports:
      - '22543:5432'
    volumes:
      - 'postgresql2:/bitnami/postgresql'

volumes:
  postgresql:
    driver: local
  postgresql2:
    driver: local
