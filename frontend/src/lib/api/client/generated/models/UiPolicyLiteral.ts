/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiPolicyLiteralType } from './UiPolicyLiteralType';
import {
    UiPolicyLiteralTypeFromJSON,
    UiPolicyLiteralTypeFromJSONTyped,
    UiPolicyLiteralTypeToJSON,
    UiPolicyLiteralTypeToJSONTyped,
} from './UiPolicyLiteralType';

/**
 * Sum type: A String, a list of Strings or a generic JSON value.
 * @export
 * @interface UiPolicyLiteral
 */
export interface UiPolicyLiteral {
    /**
     * Value Type
     * @type {UiPolicyLiteralType}
     * @memberof UiPolicyLiteral
     */
    type: UiPolicyLiteralType;
    /**
     * Only for types STRING and JSON
     * @type {string}
     * @memberof UiPolicyLiteral
     */
    value?: string;
    /**
     * Only for type STRING_LIST
     * @type {Array<string>}
     * @memberof UiPolicyLiteral
     */
    valueList?: Array<string>;
}



/**
 * Check if a given object implements the UiPolicyLiteral interface.
 */
export function instanceOfUiPolicyLiteral(value: any): value is UiPolicyLiteral {
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function UiPolicyLiteralFromJSON(json: any): UiPolicyLiteral {
    return UiPolicyLiteralFromJSONTyped(json, false);
}

export function UiPolicyLiteralFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiPolicyLiteral {
    if (json == null) {
        return json;
    }
    return {
        
        'type': UiPolicyLiteralTypeFromJSON(json['type']),
        'value': json['value'] == null ? undefined : json['value'],
        'valueList': json['valueList'] == null ? undefined : json['valueList'],
    };
}

export function UiPolicyLiteralToJSON(json: any): UiPolicyLiteral {
    return UiPolicyLiteralToJSONTyped(json, false);
}

export function UiPolicyLiteralToJSONTyped(value?: UiPolicyLiteral | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': UiPolicyLiteralTypeToJSON(value['type']),
        'value': value['value'],
        'valueList': value['valueList'],
    };
}

