/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TableColumnSortAssetListSortProperty } from './TableColumnSortAssetListSortProperty';
import {
    TableColumnSortAssetListSortPropertyFromJSON,
    TableColumnSortAssetListSortPropertyFromJSONTyped,
    TableColumnSortAssetListSortPropertyToJSON,
    TableColumnSortAssetListSortPropertyToJSONTyped,
} from './TableColumnSortAssetListSortProperty';

/**
 * Properties to filter and sort the asset list page table
 * @export
 * @interface AssetListPageFilter
 */
export interface AssetListPageFilter {
    /**
     * Query for filtering. If empty, show all entries
     * @type {string}
     * @memberof AssetListPageFilter
     */
    query?: string;
    /**
     * Page Index. Defaults to 0
     * @type {number}
     * @memberof AssetListPageFilter
     */
    page?: number;
    /**
     * Size of each page. If left out, show all entries
     * @type {number}
     * @memberof AssetListPageFilter
     */
    pageSize?: number;
    /**
     * Sort List by properties in order of appearance in the array. If empty, sort by creation date
     * @type {Array<TableColumnSortAssetListSortProperty>}
     * @memberof AssetListPageFilter
     */
    sort?: Array<TableColumnSortAssetListSortProperty>;
}

/**
 * Check if a given object implements the AssetListPageFilter interface.
 */
export function instanceOfAssetListPageFilter(value: any): value is AssetListPageFilter {
    return true;
}

export function AssetListPageFilterFromJSON(json: any): AssetListPageFilter {
    return AssetListPageFilterFromJSONTyped(json, false);
}

export function AssetListPageFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetListPageFilter {
    if (json == null) {
        return json;
    }
    return {
        
        'query': json['query'] == null ? undefined : json['query'],
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['pageSize'] == null ? undefined : json['pageSize'],
        'sort': json['sort'] == null ? undefined : ((json['sort'] as Array<any>).map(TableColumnSortAssetListSortPropertyFromJSON)),
    };
}

export function AssetListPageFilterToJSON(json: any): AssetListPageFilter {
    return AssetListPageFilterToJSONTyped(json, false);
}

export function AssetListPageFilterToJSONTyped(value?: AssetListPageFilter | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'query': value['query'],
        'page': value['page'],
        'pageSize': value['pageSize'],
        'sort': value['sort'] == null ? undefined : ((value['sort'] as Array<any>).map(TableColumnSortAssetListSortPropertyToJSON)),
    };
}

