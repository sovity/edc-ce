{
	"info": {
		"_postman_id": "4f7c492b-1fb9-41df-807a-a08ef0dd0f3d",
		"name": "sovity EDC (core 0.11.1)",
		"description": "This is the postman collection for the sovity EDC.\n\nThe Management-API is based on core-edc v0.11.1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31514741"
	},
	"item": [
		{
			"name": "Management-API",
			"item": [
				{
					"name": "Assets",
					"item": [
						{
							"name": "Create Asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "SomeOtherApiKey",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "SomeOtherApiKey",
										"type": "default",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"test-id-1\",\n    \"name\": \"test-id-2\",\n    \"description\": \"test description 1\",\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"https://webhook.site/f41af375-6f43-42b8-95d4-6356ecdf354a\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:11000/api/management/v3/assets",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "11000",
									"path": [
										"api",
										"management",
										"v3",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{ASSET_ID}}\",\n    \"properties\": {},\n    \"privateProperties\": {},\n    \"dataAddress\": {\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"{{DATA_SOURCE_URL}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter Assets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let savedAssetId = pm.collectionVariables.replaceIn(pm.variables.get(\"ASSET_ID\"));",
											"pm.test(`Validate that the asset ${savedAssetId} exists`, function() {",
											"    var responseBody = pm.response.json();",
											"    pm.expect(responseBody.some(asset => asset[\"@id\"] === savedAssetId)).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "SomeOtherApiKey",
											"type": "string"
										},
										{
											"key": "key",
											"value": "x-api-key",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"offset\": 0,\r\n    \"limit\": 100,\r\n    \"filterExpression\": []\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Asset By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let savedAssetId = pm.collectionVariables.replaceIn(pm.variables.get(\"ASSET_ID\"));",
											"pm.test(`Validate that the asset ${savedAssetId} is found`, function() {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets/{{ASSET_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets",
										"{{ASSET_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets/{{ASSET_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets",
										"{{ASSET_ID}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Policies",
					"item": [
						{
							"name": "Business Partner Groups",
							"item": [
								{
									"name": "Assigning BPN to Groups",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"{{BPN}}\",\r\n    \"tx:groups\": \"group1,group2,group3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/business-partner-groups",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"business-partner-groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Groups of BPN",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/business-partner-groups/{{BPN}}",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"business-partner-groups",
												"{{BPN}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Modify Groups of BPN",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"{{BPN}}\",\r\n    \"tx:groups\": \"group1,group2,group3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/business-partner-groups",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"business-partner-groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Groups of BPN",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/business-partner-groups/{{BPN}}",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"business-partner-groups",
												"{{BPN}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "EDC Policies",
							"item": [
								{
									"name": "Create Policy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200])",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n    },\n    \"@id\": \"{{POLICY_ID}}\",\n    \"policy\": {\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n        \"@type\": \"Set\",\n        \"permission\": [\n            {}\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/v3/policydefinitions",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"v3",
												"policydefinitions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Policy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([204])",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n    },\n    \"@type\": \"edc:PolicyDefinition\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"edc:policy\": {\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n        \"@type\": \"odrl:Set\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/{{POLICY_ID}}",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"policydefinitions",
												"{{POLICY_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter Policies",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200])",
													"});",
													"",
													"let savedPolicyId = pm.collectionVariables.replaceIn(pm.variables.get(\"POLICY_ID\"));",
													"pm.test(`Validate that the policy ${savedPolicyId} exists`, function() {",
													"    var responseBody = pm.response.json();",
													"    ",
													"    // Check if the saved assetId exists in the response",
													"    pm.expect(responseBody.some(policy => policy[\"@id\"] === savedPolicyId)).to.be.true;",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@type\": \"QuerySpec\",\n    \"offset\": 0,\n    \"limit\": 100\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/request",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"policydefinitions",
												"request"
											]
										}
									},
									"response": []
								},
								{
									"name": "Policy By Id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([200])",
													"});",
													"",
													"let savedPolicyId = pm.collectionVariables.replaceIn(pm.variables.get(\"POLICY_ID\"));",
													"pm.test(`Validate that the policy ${savedPolicyId} exists`, function() {",
													"    var policy = pm.response.json();",
													"    ",
													"    // Check if the saved assetId exists in the response",
													"    pm.expect(policy[\"@id\"]).to.be.equal(savedPolicyId);",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/{{POLICY_ID}}",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"policydefinitions",
												"{{POLICY_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Policy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([204])",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/{{POLICY_ID}}",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"policydefinitions",
												"{{POLICY_ID}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Contract Definitions",
					"item": [
						{
							"name": "Create ContractDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200])",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"accessPolicyId\": \"{{POLICY_ID}}\",\n    \"contractPolicyId\": \"{{POLICY_ID}}\",\n    \"assetsSelector\": [\n        {\n            \"@type\": \"CriterionDto\",\n            \"operandLeft\": \"id\",\n            \"operator\": \"=\",\n            \"operandRight\": \"{{ASSET_ID}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update ContractDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"accessPolicyId\": \"{{POLICY_ID}}\",\n    \"contractPolicyId\": \"{{POLICY_ID}}\",\n    \"assetsSelector\": [\n        {\n            \"@type\": \"CriterionDto\",\n            \"operandLeft\": \"id\",\n            \"operator\": \"=\",\n            \"operandRight\": \"{{ASSET_ID}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions/{{CONTRACT_DEFINITION_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions",
										"{{CONTRACT_DEFINITION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter ContractDefinitions",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200])",
											"});",
											"",
											"let savedContractDefinitionId = pm.collectionVariables.replaceIn(pm.variables.get(\"CONTRACT_DEFINITION_ID\"));",
											"pm.test(`Validate that the contract definition ${savedContractDefinitionId} exists`, function() {",
											"    var responseBody = pm.response.json();",
											"    ",
											"    // Check if the saved assetId exists in the response",
											"    pm.expect(responseBody.some(contractDefinition => contractDefinition[\"@id\"] === savedContractDefinitionId)).to.be.true;",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpec\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "ContractDefinition By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200])",
											"});",
											"",
											"let savedContractDefinitionId = pm.collectionVariables.replaceIn(pm.variables.get(\"CONTRACT_DEFINITION_ID\"));",
											"pm.test(`Validate that the contract definition ${savedContractDefinitionId} exists`, function() {",
											"    var definition = pm.response.json();",
											"    ",
											"    // Check if the saved assetId exists in the response",
											"    pm.expect(definition[\"@id\"]).to.be.equal(savedContractDefinitionId);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"@type\": \"ContractDefinition\",\n    \"edc:accessPolicyId\": \"{{POLICY_ID}}\",\n    \"edc:contractPolicyId\": \"{{POLICY_ID}}\",\n    \"edc:assetsSelector\": [\n        {\n            \"@type\": \"CriterionDto\",\n            \"edc:operandLeft\": \"https://w3id.org/edc/v0.0.1/ns/id\",\n            \"edc:operator\": \"=\",\n            \"edc:operandRight\": \"{{ASSET_ID}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions/{{CONTRACT_DEFINITION_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions",
										"{{CONTRACT_DEFINITION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete ContractDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions/{{CONTRACT_DEFINITION_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions",
										"{{CONTRACT_DEFINITION_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Catalog",
					"item": [
						{
							"name": "Request Catalog",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200])",
											"});",
											"",
											"let catalog = pm.response.json();",
											"console.log(catalog);",
											"let savedAssetId = pm.collectionVariables.replaceIn(pm.variables.get(\"ASSET_ID\"));",
											"",
											"let dataset = catalog[\"dcat:dataset\"];",
											"",
											"var data;",
											"if (dataset.constructor === Array) {",
											"    data = dataset.find(data => data[\"@id\"] === savedAssetId);",
											"} else {",
											"    data = dataset;",
											"}",
											"if(data === undefined) {",
											"    console.log(\"Did you create a contract definition?\")",
											"}",
											"console.log(data[\"odrl:hasPolicy\"][\"@id\"]);",
											"pm.collectionVariables.set(\"OFFER_ID\", data[\"odrl:hasPolicy\"][\"@id\"]);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"CatalogRequest\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"edc:counterPartyAddress\": \"http://provider/api/dsp\",\r\n    \"edc:counterPartyId\": \"provider\",\r\n    \"querySpec\": {\r\n        \"@type\": \"QuerySpecDto\",\r\n        \"offset\": 0,\r\n        \"limit\": 100\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/v3/catalog/request",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"v3",
										"catalog",
										"request"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Negotiations",
					"item": [
						{
							"name": "Start Negotiation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200])",
											"});",
											"",
											"let contractNegotiation = pm.response.json();",
											"",
											"pm.collectionVariables.set(\"CONTRACT_NEGOTIATION_ID\", contractNegotiation[\"@id\"]);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"ContractRequest\",\r\n    \"counterPartyAddress\": \"{{COUNTER_PARTY_DSP}}\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"policy\": {\r\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\r\n        \"@type\": \"odrl:Offer\",\r\n        \"@id\": \"{{OFFER_ID}}\",\r\n        \"assigner\": \"{{COUNTER_PARTY_BPN}}\",\r\n        \"target\": \"{{ASSET_ID}}\"\r\n    },\r\n    \"callbackAddresses\": [\r\n        {\r\n            \"transactional\": false,\r\n            \"uri\": \"{{CALLBACK_URI}}\",\r\n            \"events\": [\r\n                \"contract.negotiation\",\r\n                \"transfer.process\"\r\n            ],\r\n            \"authKey\": \"{{CALLBACK_AUTHKEY}}\",\r\n            \"authCodeId\": \"{{CALLBACK_AUTHCODEID}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negotiation by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}contractnegotiations/{{CONTRACT_NEGOTIATION_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}contractnegotiations"
									],
									"path": [
										"{{CONTRACT_NEGOTIATION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negotiation State",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/{{CONTRACT_NEGOTIATION_ID}}/state",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"{{CONTRACT_NEGOTIATION_ID}}",
										"state"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negotiation Agreement",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/{{CONTRACT_NEGOTIATION_ID}}/agreement",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"{{CONTRACT_NEGOTIATION_ID}}",
										"agreement"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter Negotiations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200])",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpec\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"request"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Terminate ongoing Negotiation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204])",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TerminateNegotiation\",\r\n    \"@id\": \"{{CONTRACT_NEGOTIATION_ID}}\",\r\n    \"reason\": \"{{TERMATION_REASON}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/{{CONTRACT_NEGOTIATION_ID}}/terminate",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"{{CONTRACT_NEGOTIATION_ID}}",
										"terminate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Agreements",
					"item": [
						{
							"name": "Filter Agreements",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let assetId = pm.collectionVariables.replaceIn(pm.variables.get(\"ASSET_ID\"));",
											"",
											"let filterAgreement = pm.response.json();",
											"pm.test(`Get the negotiation that contains asset ${assetId}`, function() {",
											"    pm.expect(filterAgreement.some(asset => asset[\"assetId\"] === assetId)).to.be.true;",
											"});",
											"",
											"let negotiationId = filterAgreement.find(asset => asset[\"assetId\"] === assetId)[\"@id\"];",
											"",
											"pm.collectionVariables.set(\"CONTRACT_AGREEMENT_ID\", negotiationId);",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpec\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractagreements/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractagreements",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Agreement by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractagreements/{{CONTRACT_AGREEMENT_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractagreements",
										"{{CONTRACT_AGREEMENT_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negotiation of Agreement Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractagreements/{{CONTRACT_AGREEMENT_ID}}/negotiation",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractagreements",
										"{{CONTRACT_AGREEMENT_ID}}",
										"negotiation"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Transfer",
					"item": [
						{
							"name": "HttpData-Push",
							"item": [
								{
									"name": "Start HttpData-Push",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TransferRequest\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"counterPartyAddress\": \"{{COUNTER_PARTY_DSP}}\",\r\n    \"assetId\": \"{{ASSET_ID}}\",\r\n    \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\r\n    \"dataDestination\": {\r\n        \"@type\": \"DataAddress\",\r\n        \"type\": \"HttpData\",\r\n        \"properties\": {\r\n            \"baseUrl\": \"{{TARGET_URL}}\",\r\n            \"method\": \"PUT\"\r\n        }\r\n    },\r\n    \"privateProperties\": {},\r\n    \"callbackAddresses\": [\r\n        {\r\n            \"transactional\": false,\r\n            \"uri\": \"{{CALLBACK_URI}}\",\r\n            \"events\": [\r\n                \"contract.negotiation\",\r\n                \"transfer.process\"\r\n            ],\r\n            \"authKey\": \"{{CALLBACK_AUTHKEY}}\",\r\n            \"authCodeId\": \"{{CALLBACK_AUTHCODEID}}\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "HttpData-Pull (EDR-flow)",
							"item": [
								{
									"name": "1. Start Negotiation for EDR",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"ContractRequest\",\r\n    \"counterPartyAddress\": \"{{COUNTER_PARTY_DSP}}\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"policy\": {\r\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\r\n        \"@type\": \"odrl:Offer\",\r\n        \"@id\": \"{{DATA-OFFER-ID-FROM-CATALOG-REQUEST}}\",\r\n        \"assigner\": \"{{COUNTER_PARTY_BPN}}\",\r\n        \"target\": \"{{ASSET_ID}}\",\r\n        \"odrl:permission\": [\r\n            {{PREMISSIONS-FROM-CATALOG-REQUEST}}\r\n        ],\r\n        \"odrl:prohibition\": [],\r\n        \"odrl:obligation\": []\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/edrs",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"edrs"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get transferProcessId by NegotiationId",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"offset\": 0,\r\n    \"limit\": 10,\r\n    \"filterExpression\": [\r\n        {\r\n            \"operandLeft\": \"contractNegotiationId\",\r\n            \"operator\": \"=\",\r\n            \"operandRight\": \"{{CONTRACT_NEGOTIATION_ID}}\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/edrs/request",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"edrs",
												"request"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Get EDR Information by transferProcessId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/edrs/{{TRANSFER_PROCESS_ID}}/dataaddress",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"edrs",
												"{{TRANSFER_PROCESS_ID}}",
												"dataaddress"
											]
										}
									},
									"response": []
								},
								{
									"name": "4. Refresh EDR",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/edrs/{{TRANSFER_PROCESS_ID}}/refresh",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"edrs",
												"{{TRANSFER_PROCESS_ID}}",
												"refresh"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Miscellaneous APIs",
							"item": [
								{
									"name": "Filter Transfer Processes",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let assetId = pm.collectionVariables.replaceIn(pm.variables.get(\"ASSET_ID\"));",
													"",
													"let transfers = pm.response.json();",
													"pm.test(`Validate that the asset ${assetId} exists`, function() {",
													"    pm.expect(transfers.some(transfer => transfer[\"assetId\"] === assetId)).to.be.true;",
													"});",
													"",
													"let transfer = transfers.find(transfer => transfer[\"assetId\"] === assetId);",
													"",
													"pm.collectionVariables.set(\"TRANSFER_PROCESS_ID\", transfer[\"@id\"]);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpec\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/request",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"request"
											]
										}
									},
									"response": []
								},
								{
									"name": "Transfer Process by Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Transfer Process-State by Id",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}/state",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}",
												"state"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Transfer Process",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TerminateTransferDto\",\r\n    \"reason\": \"{{TERMINATION_REASON}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}/terminate",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deprovision Transfer Process",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TerminateTransferDto\",\r\n    \"reason\": \"{{DEPROVISION_REASON}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}/deprovision",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}",
												"deprovision"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Vault Secrets",
					"item": [
						{
							"name": "Create Secret",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"Secret\",\r\n    \"@id\": \"{{SECRET_ALIAS}}\",\r\n    \"value\": \"{{THE_SECRET}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Secret",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"Secret\",\r\n    \"@id\": \"{{SECRET_ALIAS}}\",\r\n    \"value\": \"{{THE_NEW_SECRET}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Secret By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets/{{SECRET_ALIAS}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets",
										"{{SECRET_ALIAS}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Secret",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets/{{SECRET_ALIAS}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets",
										"{{SECRET_ALIAS}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "API-Wrapper",
			"item": [
				{
					"name": "UI Dashboard",
					"item": [
						{
							"name": "Get UI Dashboard Data",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/dashboard-page",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"dashboard-page"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Assets",
					"item": [
						{
							"name": "Get Assets",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/asset-page",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"asset-page"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Asset",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"testname-v1.0\",\r\n    \"title\": \"TestName\",\r\n    \"language\": \"https://w3id.org/idsa/code/EN\",\r\n    \"description\": \"Testdescription\",\r\n    \"publisherHomepage\": \"https://www.sovity.de\",\r\n    \"licenseUrl\": \"https://www.apache.org/licenses/LICENSE-2.0\",\r\n    \"version\": \"v1.0\",\r\n    \"keywords\": [\r\n        \"keyword1\",\r\n        \"keyword2\"\r\n    ],\r\n    \"mediaType\": \"application/json\",\r\n    \"landingPageUrl\": \"https://www.google.com\",\r\n    \"dataSource\": {\r\n        \"type\": \"HTTP_DATA\",\r\n        \"httpData\": {\r\n            \"baseUrl\": \"http://example.com/baseUrl/\",\r\n            \"method\": \"GET\",\r\n            \"queryParams\": \"\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/asset-page/assets",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"asset-page",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Asset (with data-source on-request)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"testname-v1.0\",\r\n    \"title\": \"TestName\",\r\n    \"language\": \"https://w3id.org/idsa/code/EN\",\r\n    \"description\": \"Testdescription\",\r\n    \"publisherHomepage\": \"https://www.sovity.de\",\r\n    \"licenseUrl\": \"https://www.apache.org/licenses/LICENSE-2.0\",\r\n    \"version\": \"v1.0\",\r\n    \"keywords\": [\r\n        \"keyword1\",\r\n        \"keyword2\"\r\n    ],\r\n    \"mediaType\": \"application/json\",\r\n    \"landingPageUrl\": \"https://www.google.com\",\r\n    \"dataAddress\": {\r\n        \"type\": \"ON_REQUEST\",\r\n        \"onRequest\": {\r\n            \"contactEmail\": \"contact@sovity.de\",\r\n            \"contactPreferredEmailSubject\": \"This asset is created just for testing purposes\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/asset-page/assets",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"asset-page",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Asset (with paramterization)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"testparamterization-v1.0\",\r\n    \"title\": \"TestParamterization\",\r\n    \"language\": \"https://w3id.org/idsa/code/EN\",\r\n    \"description\": \"Testdescription\",\r\n    \"publisherHomepage\": \"https://www.sovity.de\",\r\n    \"licenseUrl\": \"https://www.apache.org/licenses/LICENSE-2.0\",\r\n    \"version\": \"v1.0\",\r\n    \"keywords\": [\r\n        \"keyword1\",\r\n        \"keyword2\"\r\n    ],\r\n    \"mediaType\": \"application/json\",\r\n    \"landingPageUrl\": \"https://www.endpoint.com\",\r\n    \"dataSource\": {\r\n        \"type\": \"HTTP_DATA\",\r\n        \"httpData\": {\r\n            \"baseUrl\": \"http://example.com/baseUrl/\",\r\n            \"method\": \"GET\",\r\n            \"queryParams\": \"\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/asset-page/assets",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"asset-page",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Asset (with auth-header)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"testparamterization-auth-header-v1.0\",\r\n    \"title\": \"TestParamterization\",\r\n    \"language\": \"https://w3id.org/idsa/code/EN\",\r\n    \"description\": \"Testdescription\",\r\n    \"publisherHomepage\": \"https://www.sovity.de\",\r\n    \"licenseUrl\": \"https://www.apache.org/licenses/LICENSE-2.0\",\r\n    \"version\": \"v1.0\",\r\n    \"keywords\": [\r\n        \"keyword1\",\r\n        \"keyword2\"\r\n    ],\r\n    \"mediaType\": \"application/json\",\r\n    \"landingPageUrl\": \"https://www.endpoint.com\",\r\n    \"dataSource\": {\r\n        \"type\": \"HTTP_DATA\",\r\n        \"httpData\": {\r\n            \"baseUrl\": \"http://example.com/baseUrl/\",\r\n            \"method\": \"GET\",\r\n            \"queryParams\": \"\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/asset-page/assets",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"asset-page",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Asset",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"testname-v1.0\",\r\n    \"title\": \"TestName\",\r\n    \"language\": \"https://w3id.org/idsa/code/EN\",\r\n    \"description\": \"Testdescription\",\r\n    \"publisherHomepage\": \"https://www.sovity.de\",\r\n    \"licenseUrl\": \"https://www.apache.org/licenses/LICENSE-2.0\",\r\n    \"version\": \"v1.0\",\r\n    \"keywords\": [\r\n        \"keyword1\",\r\n        \"keyword2\"\r\n    ],\r\n    \"mediaType\": \"application/json\",\r\n    \"landingPageUrl\": \"https://www.google.com\",\r\n    \"dataSource\": {\r\n        \"type\": \"HTTP_DATA\",\r\n        \"httpData\": {\r\n            \"baseUrl\": \"http://example.com/baseUrl/\",\r\n            \"method\": \"GET\",\r\n            \"queryParams\": \"\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/asset-page/assets/{{ASSET_ID}}",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"asset-page",
										"assets",
										"{{ASSET_ID}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Assets",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/asset-page/assets/{{ASSET_ID}}",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"asset-page",
										"assets",
										"{{ASSET_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Policies",
					"item": [
						{
							"name": "Get Policies",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/policy-page",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"policy-page"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Policy (Connector-Restricted-Usage)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyDefinitionId\": \"testPolicy\",\r\n    \"policy\": {\r\n        \"constraints\": [\r\n            {\r\n                \"left\": \"REFERRING_CONNECTOR\",\r\n                \"operator\": \"EQ\",\r\n                \"right\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"other-connector-participant-id\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/policy-page/policy-definitions",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"policy-page",
										"policy-definitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Policy (Time-Period-Restricted)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"policyDefinitionId\": \"testTimeRestricted\",\r\n    \"policy\": {\r\n        \"constraints\": [\r\n            {\r\n                \"left\": \"POLICY_EVALUATION_TIME\",\r\n                \"operator\": \"GEQ\",\r\n                \"right\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"2024-03-31T22:00:00.000Z\"\r\n                }\r\n            },\r\n            {\r\n                \"left\": \"POLICY_EVALUATION_TIME\",\r\n                \"operator\": \"LT\",\r\n                \"right\": {\r\n                    \"type\": \"STRING\",\r\n                    \"value\": \"2024-04-30T22:00:00.000Z\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/policy-page/policy-definitions",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"policy-page",
										"policy-definitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Policy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/policy-page/policy-definitions/{{POLICY_ID}}",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"policy-page",
										"policy-definitions",
										"{{POLICY_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Definitions",
					"item": [
						{
							"name": "Get Contract Definitions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/contract-definition-page",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"contract-definition-page"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Contract Definition",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"contractDefinitionId\": \"testCD\",\r\n    \"contractPolicyId\": \"always-true\",\r\n    \"accessPolicyId\": \"always-true\",\r\n    \"assetsSelector\": [\r\n        {\r\n            \"operandLeft\": \"https://w3id.org/edc/v0.0.1/ns/id\",\r\n            \"operator\": \"IN\",\r\n            \"operandRight\": {\r\n                \"type\": \"VALUE_LIST\",\r\n                \"valueList\": [\r\n                    \"testname-v1.0\"\r\n                ]\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/contract-definition-page/contract-definitions",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"contract-definition-page",
										"contract-definitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Contract Definition",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/contract-definition-page/contract-definitions/{{CONTRACT_DEFINITION_ID}}",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"contract-definition-page",
										"contract-definitions",
										"{{CONTRACT_DEFINITION_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Catalog",
					"item": [
						{
							"name": "Request Catalog",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/catalog-page/data-offers?connectorEndpoint={{REQUESTING_DSP_ENDPOINT}}",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"catalog-page",
										"data-offers"
									],
									"query": [
										{
											"key": "connectorEndpoint",
											"value": "{{REQUESTING_DSP_ENDPOINT}}",
											"description": "The full URL to the connector's DSP endpoint as seen by the connector. Example for the default docker compose setup (within the docker network): http://edc2:11003/api/dsp. You can also find this value in the dashboard's UI."
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Negotiations",
					"item": [
						{
							"name": "Start Negotiation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"counterPartyAddress\": \"http://edc:11003/api/dsp\",\r\n    \"counterPartyParticipantId\": \"my-edc\",\r\n    \"contractOfferId\": \"{{CONTRACT_OFFER_ID}}\",\r\n    \"policyJsonLd\": \"{{POLICY_JSON_LD}}\",\r\n    \"assetId\": \"{{ASSET_ID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/catalog-page/contract-negotiations",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"catalog-page",
										"contract-negotiations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Negotiation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/catalog-page/contract-negotiations/{{NEGOTIATION_ID}}",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"catalog-page",
										"contract-negotiations",
										"{{NEGOTIATION_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Agreement",
					"item": [
						{
							"name": "Get Contract Agreements",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/contract-agreement-page",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"contract-agreement-page"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Contract Agreements By ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/contract-agreement-page/{{CONTRACT_AGREEMENT_ID}}",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"contract-agreement-page",
										"{{CONTRACT_AGREEMENT_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Terminate Contract Agreement",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"detail\": \"Some detail between 1 and 1000 chars long\",\n    \"reason\": \"Some reason between 1 and 100 chars\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/content-agreement-page/{{CONTRACT_AGREEMENT_ID}}/terminate",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"content-agreement-page",
										"{{CONTRACT_AGREEMENT_ID}}",
										"terminate"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Transfer",
					"item": [
						{
							"name": "Initiate Transfer",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"contractAgreementId\": \"dGVzdENEd28=:dGVzdG5hbWUtdjEuMA==:OTI4ZmM4NzYtYzQ4MC00ODExLTgyMTEtMjhkYzRhZTk5MDEw\",\r\n    \"dataSink\": {\r\n        \"type\": \"HttpData\",\r\n        \"baseUrl\": \"https://webhook.site/b30aa8f1-2b47-42f5-b194-88d7c4ed80d4\",\r\n        \"method\": \"POST\",\r\n        \"authKey\": \"authHeader\",\r\n        \"secretName\": \"test\",\r\n        \"queryParams\": \"\",\r\n        \"header:myHeader\": \"123\"\r\n    },\r\n    \"transferProcessProperties\": {}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/contract-agreement-page/transfers",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"contract-agreement-page",
										"transfers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Initiate Transfer (with parameterization)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"contractAgreementId\": \"S0MtSlEtUGFycnJycmFt:a2MtanEtYXNzZXQtMg==:YmMzNDkzZWQtYWYzYy00YzE0LWExMzAtZTU0YzM3MzNlMjJk\",\r\n    \"dataSink\": {\r\n        \"type\": \"HttpData\",\r\n        \"baseUrl\": \"https://webhook.site/0c0b0148-cfac-4317-803a-ef17e8f5f9ec\",\r\n        \"method\": \"POST\",\r\n        \"queryParams\": \"\"\r\n    },\r\n    \"transferProcessProperties\": {\r\n        \"method\": \"PUT\",\r\n        \"pathSegments\": \"icantread\",\r\n        \"queryParams\": \"fruit=tomato\",\r\n        \"body\": \"true\",\r\n        \"contentType\": \"application/json\",\r\n        \"mediaType\": \"application/json\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/contract-agreement-page/transfers",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"contract-agreement-page",
										"transfers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Transfer History",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/transfer-history-page",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"transfer-history-page"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Asset of Transfer Process",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/transfer-history-page/transfer-processes/{{TRANSFERPROCESS_ID}}/asset",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"transfer-history-page",
										"transfer-processes",
										"{{TRANSFERPROCESS_ID}}",
										"asset"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Offer",
					"item": [
						{
							"name": "Check Policy ID Availability",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/data-offer-page/validate-policy-id/{{POLICY_ID}}",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"data-offer-page",
										"validate-policy-id",
										"{{POLICY_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Asset ID Availability",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/data-offer-page/validate-asset-id/{{ASSET_ID}}",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"data-offer-page",
										"validate-asset-id",
										"{{ASSET_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Contract Definition ID Availability",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{CONSUMER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/data-offer-page/validate-contract-definition-id/{{CONTRACT_DEFINITION_ID}}",
									"host": [
										"{{CONSUMER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"data-offer-page",
										"validate-contract-definition-id",
										"{{CONTRACT_DEFINITION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Data Offer",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"uiAssetCreateRequest\": {\n        \"id\": \"create-data-offer-1\",\n        \"title\": \"Create Data Offer Example\",\n        \"language\": \"https://w3id.org/idsa/code/EN\",\n        \"description\": \"Testdescription\",\n        \"publisherHomepage\": \"https://www.sovity.de\",\n        \"licenseUrl\": \"https://www.apache.org/licenses/LICENSE-2.0\",\n        \"version\": \"v1.0\",\n        \"keywords\": [\n            \"keyword1\",\n            \"keyword2\"\n        ],\n        \"mediaType\": \"application/json\",\n        \"landingPageUrl\": \"https://www.google.com\",\n        \"dataAddressProperties\": {\n            \"https://w3id.org/edc/v0.0.1/ns/type\": \"HttpData\",\n            \"https://w3id.org/edc/v0.0.1/ns/baseUrl\": \"https://www.google.com\",\n            \"https://w3id.org/edc/v0.0.1/ns/method\": \"GET\",\n            \"https://w3id.org/edc/v0.0.1/ns/queryParams\": \"\"\n        },\n        \"dataSource\": {\n            \"type\": \"HTTP_DATA\",\n            \"httpData\": {\n                \"baseUrl\": \"http://example.com/baseUrl/\"\n            }\n        }\n    },\n    \"policy\": \"PUBLISH_RESTRICTED\",\n    \"uiPolicyExpression\": {\n        \"constraints\": [\n            {\n                \"left\": \"POLICY_EVALUATION_TIME\",\n                \"operator\": \"GEQ\",\n                \"right\": {\n                    \"type\": \"STRING\",\n                    \"value\": \"2024-03-31T22:00:00.000Z\"\n                }\n            },\n            {\n                \"left\": \"POLICY_EVALUATION_TIME\",\n                \"operator\": \"LT\",\n                \"right\": {\n                    \"type\": \"STRING\",\n                    \"value\": \"2024-04-30T22:00:00.000Z\"\n                }\n            }\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{PROVIDER_EDC_MANAGEMENT_URL}}/wrapper/ui/pages/create-data-offer/",
									"host": [
										"{{PROVIDER_EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"wrapper",
										"ui",
										"pages",
										"create-data-offer",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "SomeOtherApiKey",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "COUNTER",
			"value": "1",
			"type": "default"
		},
		{
			"key": "ASSET_ID",
			"value": "http-source-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "POLICY_ID",
			"value": "policy-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "CONTRACT_DEFINITION_ID",
			"value": "contract-definition-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "CONTRACT_AGREEMENT_ID",
			"value": ""
		},
		{
			"key": "CONTRACT_NEGOTIATION_ID",
			"value": ""
		},
		{
			"key": "TRANSFER_PROCESS_ID",
			"value": ""
		},
		{
			"key": "CLUSTER",
			"value": "",
			"type": "default"
		},
		{
			"key": "CONNECTOR_NAME",
			"value": "",
			"type": "default"
		},
		{
			"key": "CONNECTOR_SECRET",
			"value": "",
			"type": "default"
		},
		{
			"key": "EDC_MANAGEMENT_URL_BASE",
			"value": "https://{{CONNECTOR_NAME}}.{{CLUSTER}}-sovity.azure.sovity.io/control/data",
			"type": "default"
		},
		{
			"key": "EDC_MANAGEMENT_URL",
			"value": "{{EDC_MANAGEMENT_URL_BASE}}/v3",
			"type": "default"
		},
		{
			"key": "COUNTER_PARTY_DSP",
			"value": "https://{{COUNTER_PARTY_CONNECTOR_NAME}}.{{COUNTER_PARTY_CONNECTOR_CLUSTER}}-sovity.azure.sovity.io/control/api/v1/dsp",
			"type": "string"
		},
		{
			"key": "COUNTER_PARTY_CONNECTOR_NAME",
			"value": "",
			"type": "string"
		},
		{
			"key": "COUNTER_PARTY_CONNECTOR_CLUSTER",
			"value": "prod",
			"type": "string"
		},
		{
			"key": "COUNTER_PARTY_PUBLIC",
			"value": "https://{{COUNTER_PARTY_CONNECTOR_NAME}}.{{COUNTER_PARTY_CONNECTOR_CLUSTER}}-sovity.azure.sovity.io/data/public"
		},
		{
			"key": "COUNTER_PARTY_BPN",
			"value": "",
			"type": "string"
		},
		{
			"key": "BPN",
			"value": "BPNL000000000001",
			"type": "string"
		},
		{
			"key": "CONSUMER_EDC_MANAGEMENT_URL",
			"value": "{{EDC_MANAGEMENT_URL}}"
		},
		{
			"key": "OFFER_ID",
			"value": "",
			"type": "string"
		},
		{
			"key": "TARGET_URL",
			"value": "",
			"type": "string"
		}
	]
}
