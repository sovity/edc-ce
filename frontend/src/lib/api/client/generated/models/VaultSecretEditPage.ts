/*
 * Copyright 2025 sovity GmbH
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 *
 * Contributors:
 *     sovity - init and continued development
 */
/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Data for the Edit Page for User Managed Vault Secrets
 * @export
 * @interface VaultSecretEditPage
 */
export interface VaultSecretEditPage {
    /**
     * Key
     * @type {string}
     * @memberof VaultSecretEditPage
     */
    key: string;
    /**
     * Description
     * @type {string}
     * @memberof VaultSecretEditPage
     */
    description: string;
}

/**
 * Check if a given object implements the VaultSecretEditPage interface.
 */
export function instanceOfVaultSecretEditPage(value: any): value is VaultSecretEditPage {
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    return true;
}

export function VaultSecretEditPageFromJSON(json: any): VaultSecretEditPage {
    return VaultSecretEditPageFromJSONTyped(json, false);
}

export function VaultSecretEditPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaultSecretEditPage {
    if (json == null) {
        return json;
    }
    return {
        
        'key': json['key'],
        'description': json['description'],
    };
}

export function VaultSecretEditPageToJSON(json: any): VaultSecretEditPage {
    return VaultSecretEditPageToJSONTyped(json, false);
}

export function VaultSecretEditPageToJSONTyped(value?: VaultSecretEditPage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'key': value['key'],
        'description': value['description'],
    };
}

