/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Whether the contract agreement is incoming or outgoing
 * @export
 */
export const ContractAgreementDirection = {
    Consuming: 'CONSUMING',
    Providing: 'PROVIDING'
} as const;
export type ContractAgreementDirection = typeof ContractAgreementDirection[keyof typeof ContractAgreementDirection];


export function instanceOfContractAgreementDirection(value: any): boolean {
    for (const key in ContractAgreementDirection) {
        if (Object.prototype.hasOwnProperty.call(ContractAgreementDirection, key)) {
            if (ContractAgreementDirection[key as keyof typeof ContractAgreementDirection] === value) {
                return true;
            }
        }
    }
    return false;
}

export function ContractAgreementDirectionFromJSON(json: any): ContractAgreementDirection {
    return ContractAgreementDirectionFromJSONTyped(json, false);
}

export function ContractAgreementDirectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractAgreementDirection {
    return json as ContractAgreementDirection;
}

export function ContractAgreementDirectionToJSON(value?: ContractAgreementDirection | null): any {
    return value as any;
}

export function ContractAgreementDirectionToJSONTyped(value: any, ignoreDiscriminator: boolean): ContractAgreementDirection {
    return value as ContractAgreementDirection;
}

