/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Data for initiating a Contract Negotiation
 * @export
 * @interface ContractNegotiationRequest
 */
export interface ContractNegotiationRequest {
    /**
     * Counter Party Id
     * @type {string}
     * @memberof ContractNegotiationRequest
     */
    counterPartyId: string;
    /**
     * Counter Party Address
     * @type {string}
     * @memberof ContractNegotiationRequest
     */
    counterPartyAddress: string;
    /**
     * Contract Offer Dto 
     * @type {string}
     * @memberof ContractNegotiationRequest
     */
    contractOfferId: string;
    /**
     * Policy JsonLd
     * @type {string}
     * @memberof ContractNegotiationRequest
     */
    policyJsonLd: string;
    /**
     * Asset ID
     * @type {string}
     * @memberof ContractNegotiationRequest
     */
    assetId: string;
}

/**
 * Check if a given object implements the ContractNegotiationRequest interface.
 */
export function instanceOfContractNegotiationRequest(value: any): value is ContractNegotiationRequest {
    if (!('counterPartyId' in value) || value['counterPartyId'] === undefined) return false;
    if (!('counterPartyAddress' in value) || value['counterPartyAddress'] === undefined) return false;
    if (!('contractOfferId' in value) || value['contractOfferId'] === undefined) return false;
    if (!('policyJsonLd' in value) || value['policyJsonLd'] === undefined) return false;
    if (!('assetId' in value) || value['assetId'] === undefined) return false;
    return true;
}

export function ContractNegotiationRequestFromJSON(json: any): ContractNegotiationRequest {
    return ContractNegotiationRequestFromJSONTyped(json, false);
}

export function ContractNegotiationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractNegotiationRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'counterPartyId': json['counterPartyId'],
        'counterPartyAddress': json['counterPartyAddress'],
        'contractOfferId': json['contractOfferId'],
        'policyJsonLd': json['policyJsonLd'],
        'assetId': json['assetId'],
    };
}

export function ContractNegotiationRequestToJSON(json: any): ContractNegotiationRequest {
    return ContractNegotiationRequestToJSONTyped(json, false);
}

export function ContractNegotiationRequestToJSONTyped(value?: ContractNegotiationRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'counterPartyId': value['counterPartyId'],
        'counterPartyAddress': value['counterPartyAddress'],
        'contractOfferId': value['contractOfferId'],
        'policyJsonLd': value['policyJsonLd'],
        'assetId': value['assetId'],
    };
}

