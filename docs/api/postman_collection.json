{
	"info": {
		"_postman_id": "6c5d9ba3-b67e-452a-9342-73cabfc6691e",
		"name": "sovity EDC (core 0.7.2)",
		"description": "This is the postman collection for the sovity EDC.\n\nThe Management-API is based on core-edc v0.7.2.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31514741"
	},
	"item": [
		{
			"name": "Management-API",
			"item": [
				{
					"name": "Assets",
					"item": [
						{
							"name": "Create Asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"properties\": {\n        \"id\": \"{{ASSET_ID}}\",\n        \"description\": \"{{ASSET_DESCRIPTION}}\"\n    },\n    \"dataAddress\": {\n        \"@type\": \"DataAddress\",\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"{{DATA_SOURCE_URL}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{ASSET_ID}}\",\n    \"properties\": {\n        \"id\": \"{{ASSET_ID}}\",\n        \"description\": \"{{ASSET_DESCRIPTION}}\"\n    },\n    \"dataAddress\": {\n        \"@type\": \"DataAddress\",\n        \"type\": \"HttpData\",\n        \"baseUrl\": \"{{DATA_SOURCE_URL}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter Assets",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Asset By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets/{{ASSET_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets",
										"{{ASSET_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Asset",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"asset\": {\n        \"properties\": {\n            \"asset:prop:name\": \"text-document\",\n            \"asset:prop:contenttype\": \"text/plain\",\n            \"asset:prop:version\": \"1.0\",\n            \"asset:prop:id\": \"text-document\",\n            \"type\": \"AzureStorage\"\n        }\n    },\n    \"dataAddress\": {\n        \"properties\": {\n            \"type\": \"AzureStorage\",\n            \"account\": \"{{storage_account}}\",\n            \"container\": \"src-container\",\n            \"blobname\": \"text-document.txt\",\n            \"keyName\": \"{{storage_account}}-key1\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/assets/{{ASSET_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"assets",
										"{{ASSET_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Policies",
					"item": [
						{
							"name": "Business Partner Groups",
							"item": [
								{
									"name": "Assigning BPN to Groups",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"{{BPN}}\",\r\n    \"tx:groups\": [\r\n        \"{{GROUP1}}\",\r\n        \"{{GROUP2}}\"\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL_BASE}}/business-partner-groups",
											"host": [
												"{{EDC_MANAGEMENT_URL_BASE}}"
											],
											"path": [
												"business-partner-groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Groups of BPN",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL_BASE}}/business-partner-groups/{{BPN}}",
											"host": [
												"{{EDC_MANAGEMENT_URL_BASE}}"
											],
											"path": [
												"business-partner-groups",
												"{{BPN}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Modify Groups of BPN",
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\r\n    },\r\n    \"@id\": \"{{BPN}}\",\r\n    \"tx:groups\": [\r\n        {\r\n            \"@value\": \"{{GROUP1}}\"\r\n        },\r\n        {\r\n            \"@value\": \"{{GROUP2}}\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL_BASE}}/business-partner-groups",
											"host": [
												"{{EDC_MANAGEMENT_URL_BASE}}"
											],
											"path": [
												"business-partner-groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Groups of BPN",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL_BASE}}/business-partner-groups/{{BPN}}",
											"host": [
												"{{EDC_MANAGEMENT_URL_BASE}}"
											],
											"path": [
												"business-partner-groups",
												"{{BPN}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create Group Policy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
													"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Api-Key",
												"value": "ApiKeyDefaultValue",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\",\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\",\n        \"tx\": \"https://w3id.org/tractusx/v0.0.1/ns/\"\n    },\n    \"@type\": \"PolicyDefinitionDto\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"policy\": {\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n        \"@type\": \"odrl:Set\",\n        \"permission\": [\n            {\n                \"action\": \"USE\",\n                \"odrl:constraint\": [\n                    {\n                        \"leftOperand\": \"tx:BusinessPartnerGroup\",\n                        \"operator\": \"odrl:isAnyOf\",\n                        \"rightOperand\": \"{{GROUP1}},{{GROUP2}}\"\n                    }\n                ]\n            }\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"policydefinitions"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Create Empty Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n    },\n    \"@type\": \"edc:PolicyDefinition\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"edc:policy\": {\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n        \"@type\": \"odrl:Set\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"policydefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\",\n        \"odrl\": \"http://www.w3.org/ns/odrl/2/\"\n    },\n    \"@type\": \"edc:PolicyDefinition\",\n    \"@id\": \"{{POLICY_ID}}\",\n    \"edc:policy\": {\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\n        \"@type\": \"odrl:Set\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/{{POLICY_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"policydefinitions",
										"{{POLICY_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter Policies",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "pass",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@type\": \"QuerySpecDto\",\n    \"offset\": 0,\n    \"limit\": 100\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"policydefinitions",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Policy By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/{{POLICY_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"policydefinitions",
										"{{POLICY_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Policy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/policydefinitions/{{POLICY_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"policydefinitions",
										"{{POLICY_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Definitions",
					"item": [
						{
							"name": "Create ContractDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"@type\": \"edc:ContractDefinition\",\n    \"accessPolicyId\": \"{{POLICY_ID}}\",\n    \"contractPolicyId\": \"{{POLICY_ID}}\",\n    \"assetsSelector\": [\n        {\n            \"@type\": \"CriterionDto\",\n            \"operandLeft\": \"id\",\n            \"operator\": \"=\",\n            \"operandRight\": \"{{ASSET_ID}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update ContractDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"@type\": \"ContractDefinition\",\n    \"accessPolicyId\": \"{{POLICY_ID}}\",\n    \"contractPolicyId\": \"{{POLICY_ID}}\",\n    \"assetsSelector\": [\n        {\n            \"@type\": \"CriterionDto\",\n            \"operandLeft\": \"id\",\n            \"operator\": \"=\",\n            \"operandRight\": \"{{ASSET_ID}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter ContractDefinitions",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "pass",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "ContractDefinition By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"@context\": {\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\n    },\n    \"@id\": \"{{CONTRACT_DEFINITION_ID}}\",\n    \"@type\": \"ContractDefinition\",\n    \"edc:accessPolicyId\": \"{{POLICY_ID}}\",\n    \"edc:contractPolicyId\": \"{{POLICY_ID}}\",\n    \"edc:assetsSelector\": [\n        {\n            \"@type\": \"CriterionDto\",\n            \"edc:operandLeft\": \"https://w3id.org/edc/v0.0.1/ns/id\",\n            \"edc:operator\": \"=\",\n            \"edc:operandRight\": \"{{ASSET_ID}}\"\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions/{{CONTRACT_DEFINITION_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions",
										"{{CONTRACT_DEFINITION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete ContractDefinition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204 No Content (if new asset) or 409 Conflict (if asset already exists)\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([204, 409])",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractdefinitions/{{CONTRACT_DEFINITION_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractdefinitions",
										"{{CONTRACT_DEFINITION_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Catalog",
					"item": [
						{
							"name": "Request Catalog",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"edc:CatalogRequest\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"edc:counterPartyAddress\": \"{{COUNTER_PARTY_DSP}}\",\r\n    \"edc:counterPartyId\": \"{{COUNTER_PARTY_BPN}}\",\r\n    \"querySpec\": {\r\n        \"@type\": \"QuerySpecDto\",\r\n        \"offset\": 0,\r\n        \"limit\": 100\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/catalog/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"catalog",
										"request"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Negotiations",
					"item": [
						{
							"name": "Start Negotiation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"ContractRequest\",\r\n    \"counterPartyAddress\": \"{{COUNTER_PARTY_DSP}}\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"policy\": {\r\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\r\n        \"@type\": \"odrl:Offer\",\r\n        \"@id\": \"{{OFFER_ID}}\",\r\n        \"assigner\": \"{{COUNTER_PARTY_BPN}}\",\r\n        \"target\": \"{{ASSET_ID}}\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter Negotiations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"request"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Terminate ongoing Negotiation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "pass",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TerminateNegotiation\",\r\n    \"@id\": \"{{CONTRACT_NEGOTIATION_ID}}\",\r\n    \"reason\": \"{{TERMATION_REASON}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/{{CONTRACT_NEGOTIATION_ID}}/terminate",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"{{CONTRACT_NEGOTIATION_ID}}",
										"terminate"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negotiation by Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/{{CONTRACT_NEGOTIATION_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"{{CONTRACT_NEGOTIATION_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Contract Agreements",
					"item": [
						{
							"name": "Filter Agreements",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractagreements/request",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractagreements",
										"request"
									]
								}
							},
							"response": []
						},
						{
							"name": "Agreement by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractagreements/{{CONTRACT_AGREEMENT_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractagreements",
										"{{CONTRACT_AGREEMENT_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Agreement by Negotiation Id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Api-Key",
										"value": "ApiKeyDefaultValue",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractnegotiations/{{CONTRACT_NEGOTIATION_ID}}/agreement",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractnegotiations",
										"{{CONTRACT_NEGOTIATION_ID}}",
										"agreement"
									]
								}
							},
							"response": []
						},
						{
							"name": "Negotiation of Agreement Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/contractagreements/{{CONTRACT_AGREEMENT_ID}}/negotiation",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"contractagreements",
										"{{CONTRACT_AGREEMENT_ID}}",
										"negotiation"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Transfer",
					"item": [
						{
							"name": "HttpData-Push",
							"item": [
								{
									"name": "Start HttpData-Push",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Api-Key",
												"value": "ApiKeyDefaultValue",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TransferRequest\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"counterPartyAddress\": \"{{COUNTER_PARTY_DSP}}\",\r\n    \"connectorId\": \"{{COUNTER_PARTY_BPN}}\",\r\n    \"assetId\": \"{{ASSET_ID}}\",\r\n    \"dataDestination\": {\r\n        \"@type\": \"DataAddress\",\r\n        \"type\": \"HttpData\",\r\n        \"properties\": {\r\n            \"baseUrl\": \"{{TARGET_URL}}\",\r\n            \"method\": \"PUT\"\r\n        }\r\n    },\r\n    \"contractId\": \"{{CONTRACT_AGREEMENT_ID}}\",\r\n    \"privateProperties\": {},\r\n    \"transferType\": \"HttpData-PUSH\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "HttpData-Pull (EDR-flow)",
							"item": [
								{
									"name": "1. Start Negotiation for EDR",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"ContractRequest\",\r\n    \"counterPartyAddress\": \"{{COUNTER_PARTY_DSP}}\",\r\n    \"protocol\": \"dataspace-protocol-http\",\r\n    \"policy\": {\r\n        \"@context\": \"http://www.w3.org/ns/odrl.jsonld\",\r\n        \"@type\": \"odrl:Offer\",\r\n        \"@id\": \"{{DATA-OFFER-ID-FROM-CATALOG-REQUEST}}\",\r\n        \"assigner\": \"{{COUNTER_PARTY_BPN}}\",\r\n        \"target\": \"{{ASSET_ID}}\",\r\n        \"odrl:permission\": [\r\n            {{PREMISSIONS-FROM-CATALOG-REQUEST}}\r\n        ],\r\n        \"odrl:prohibition\": [],\r\n        \"odrl:obligation\": []\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL_BASE}}/v2/edrs",
											"host": [
												"{{EDC_MANAGEMENT_URL_BASE}}"
											],
											"path": [
												"v2",
												"edrs"
											]
										}
									},
									"response": []
								},
								{
									"name": "2. Get transferProcessId by NegotiationId",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 1,\r\n    \"filterExpression\": [\r\n        {\r\n            \"operandLeft\": \"contractNegotiationId\",\r\n            \"operator\": \"=\",\r\n            \"operandRight\": \"{{CONTRACT_NEGOTIATION_ID}}\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL_BASE}}/v2/edrs/request",
											"host": [
												"{{EDC_MANAGEMENT_URL_BASE}}"
											],
											"path": [
												"v2",
												"edrs",
												"request"
											]
										}
									},
									"response": []
								},
								{
									"name": "3. Get EDR Information by transferProcessId",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL_BASE}}/v2/edrs/{{TRANSFER_PROCESS_ID}}/dataaddress",
											"host": [
												"{{EDC_MANAGEMENT_URL_BASE}}"
											],
											"path": [
												"v2",
												"edrs",
												"{{TRANSFER_PROCESS_ID}}",
												"dataaddress"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Miscellaneous APIs",
							"item": [
								{
									"name": "Filter Transfer Processes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Api-Key",
												"value": "pass",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"QuerySpecDto\",\r\n    \"offset\": 0,\r\n    \"limit\": 100\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/request",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"request"
											]
										}
									},
									"response": []
								},
								{
									"name": "Transfer Process by Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Api-Key",
												"value": "pass",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Transfer Process-State by Id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Api-Key",
												"value": "pass",
												"type": "default"
											}
										],
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}/state",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}",
												"state"
											]
										}
									},
									"response": []
								},
								{
									"name": "Terminate Transfer Process",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Api-Key",
												"value": "pass",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TerminateTransferDto\",\r\n    \"reason\": \"{{TERMINATION_REASON}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}/terminate",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}",
												"terminate"
											]
										}
									},
									"response": []
								},
								{
									"name": "Deprovision Transfer Process",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Api-Key",
												"value": "pass",
												"type": "default"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@context\": {\r\n        \"edc\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"TerminateTransferDto\",\r\n    \"reason\": \"{{DEPROVISION_REASON}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{EDC_MANAGEMENT_URL}}/transferprocesses/{{TRANSFER_PROCESS_ID}}/deprovision",
											"host": [
												"{{EDC_MANAGEMENT_URL}}"
											],
											"path": [
												"transferprocesses",
												"{{TRANSFER_PROCESS_ID}}",
												"deprovision"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Vault Secrets",
					"item": [
						{
							"name": "Create Secret",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"Secret\",\r\n    \"@id\": \"{{SECRET_ALIAS}}\",\r\n    \"value\": \"{{THE_SECRET}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Secret",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@context\": {\r\n        \"@vocab\": \"https://w3id.org/edc/v0.0.1/ns/\"\r\n    },\r\n    \"@type\": \"Secret\",\r\n    \"@id\": \"{{SECRET_ALIAS}}\",\r\n    \"value\": \"{{THE_NEW_SECRET}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Secret By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets/:{{SECRET_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets",
										":{{SECRET_ID}}"
									],
									"variable": [
										{
											"key": "{{SECRET_ID}}",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Secret",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{EDC_MANAGEMENT_URL}}/secrets/:{{SECRET_ID}}",
									"host": [
										"{{EDC_MANAGEMENT_URL}}"
									],
									"path": [
										"secrets",
										":{{SECRET_ID}}"
									],
									"variable": [
										{
											"key": "{{SECRET_ID}}",
											"value": ""
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "clientId",
				"value": "client-{{CONNECTOR_NAME}}-app",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "client_credentials",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{CONNECTOR_SECRET}}",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "authUrl",
				"value": "{{AUTH_URL}}",
				"type": "string"
			},
			{
				"key": "accessTokenUrl",
				"value": "{{TOKEN_URL}}",
				"type": "string"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {",
					"    console.log(response.json());",
					"});",
					"pm.environment.set(\"variable_key\", \"variable_value\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "COUNTER",
			"value": "1",
			"type": "default"
		},
		{
			"key": "ASSET_ID",
			"value": "http-source-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "POLICY_ID",
			"value": "policy-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "CONTRACT_DEFINITION_ID",
			"value": "contract-definition-{{COUNTER}}",
			"type": "default"
		},
		{
			"key": "CONTRACT_AGREEMENT_ID",
			"value": ""
		},
		{
			"key": "CONTRACT_NEGOTIATION_ID",
			"value": ""
		},
		{
			"key": "TRANSFER_PROCESS_ID",
			"value": ""
		},
		{
			"key": "CLUSTER",
			"value": "",
			"type": "default"
		},
		{
			"key": "CONNECTOR_NAME",
			"value": "",
			"type": "default"
		},
		{
			"key": "CONNECTOR_SECRET",
			"value": "",
			"type": "default"
		},
		{
			"key": "EDC_MANAGEMENT_URL_BASE",
			"value": "https://{{CONNECTOR_NAME}}.{{CLUSTER}}-sovity.azure.sovity.io/control/data",
			"type": "default"
		},
		{
			"key": "EDC_MANAGEMENT_URL",
			"value": "{{EDC_MANAGEMENT_URL_BASE}}/v3",
			"type": "default"
		},
		{
			"key": "COUNTER_PARTY_DSP",
			"value": "https://{{COUNTER_PARTY_CONNECTOR_NAME}}.{{COUNTER_PARTY_CONNECTOR_CLUSTER}}-sovity.azure.sovity.io/control/api/v1/dsp",
			"type": "string"
		},
		{
			"key": "COUNTER_PARTY_CONNECTOR_NAME",
			"value": "",
			"type": "string"
		},
		{
			"key": "COUNTER_PARTY_CONNECTOR_CLUSTER",
			"value": "prod",
			"type": "string"
		},
		{
			"key": "COUNTER_PARTY_PUBLIC",
			"value": "https://{{COUNTER_PARTY_CONNECTOR_NAME}}.{{COUNTER_PARTY_CONNECTOR_CLUSTER}}-sovity.azure.sovity.io/data/public"
		},
		{
			"key": "COUNTER_PARTY_BPN",
			"value": "",
			"type": "string"
		}
	]
}
