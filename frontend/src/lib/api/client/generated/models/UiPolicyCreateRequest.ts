/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiPolicyConstraint } from './UiPolicyConstraint';
import {
    UiPolicyConstraintFromJSON,
    UiPolicyConstraintFromJSONTyped,
    UiPolicyConstraintToJSON,
    UiPolicyConstraintToJSONTyped,
} from './UiPolicyConstraint';

/**
 * [Deprecated] Conjunction of constraints (simplified UiPolicyExpression)
 * @export
 * @interface UiPolicyCreateRequest
 */
export interface UiPolicyCreateRequest {
    /**
     * Conjunction of required constraints
     * @type {Array<UiPolicyConstraint>}
     * @memberof UiPolicyCreateRequest
     */
    constraints?: Array<UiPolicyConstraint>;
}

/**
 * Check if a given object implements the UiPolicyCreateRequest interface.
 */
export function instanceOfUiPolicyCreateRequest(value: any): value is UiPolicyCreateRequest {
    return true;
}

export function UiPolicyCreateRequestFromJSON(json: any): UiPolicyCreateRequest {
    return UiPolicyCreateRequestFromJSONTyped(json, false);
}

export function UiPolicyCreateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiPolicyCreateRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'constraints': json['constraints'] == null ? undefined : ((json['constraints'] as Array<any>).map(UiPolicyConstraintFromJSON)),
    };
}

export function UiPolicyCreateRequestToJSON(json: any): UiPolicyCreateRequest {
    return UiPolicyCreateRequestToJSONTyped(json, false);
}

export function UiPolicyCreateRequestToJSONTyped(value?: UiPolicyCreateRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'constraints': value['constraints'] == null ? undefined : ((value['constraints'] as Array<any>).map(UiPolicyConstraintToJSON)),
    };
}

