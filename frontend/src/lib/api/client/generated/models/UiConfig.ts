/* eslint-disable */
/**
 * sovity EDC API Wrapper
 * sovity\'s EDC API Wrapper contains a selection of APIs for multiple consumers, e.g. our EDC UI API, our generic Use Case API, our Commercial Edition APIs, etc. We bundled these APIs, so we can have an easier time generating our API Client Libraries.
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: contact@sovity.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UiConfigFeature } from './UiConfigFeature';
import {
    UiConfigFeatureFromJSON,
    UiConfigFeatureFromJSONTyped,
    UiConfigFeatureToJSON,
    UiConfigFeatureToJSONTyped,
} from './UiConfigFeature';
import type { UiConfigPreconfiguredCounterparty } from './UiConfigPreconfiguredCounterparty';
import {
    UiConfigPreconfiguredCounterpartyFromJSON,
    UiConfigPreconfiguredCounterpartyFromJSONTyped,
    UiConfigPreconfiguredCounterpartyToJSON,
    UiConfigPreconfiguredCounterpartyToJSONTyped,
} from './UiConfigPreconfiguredCounterparty';

/**
 * UI Config
 * @export
 * @interface UiConfig
 */
export interface UiConfig {
    /**
     * Enabled features
     * @type {Array<UiConfigFeature>}
     * @memberof UiConfig
     */
    features: Array<UiConfigFeature>;
    /**
     * Pre-configured Counterparty Connectors
     * @type {Array<UiConfigPreconfiguredCounterparty>}
     * @memberof UiConfig
     */
    preconfiguredCounterparties: Array<UiConfigPreconfiguredCounterparty>;
    /**
     * Logout URL
     * @type {string}
     * @memberof UiConfig
     */
    logoutUrl?: string;
    /**
     * Documentation URL
     * @type {string}
     * @memberof UiConfig
     */
    documentationUrl?: string;
    /**
     * Support URL
     * @type {string}
     * @memberof UiConfig
     */
    supportUrl?: string;
    /**
     * Privacy Policy URL
     * @type {string}
     * @memberof UiConfig
     */
    privacyPolicyUrl?: string;
    /**
     * Legal Notice URL
     * @type {string}
     * @memberof UiConfig
     */
    legalNoticeUrl?: string;
}

/**
 * Check if a given object implements the UiConfig interface.
 */
export function instanceOfUiConfig(value: any): value is UiConfig {
    if (!('features' in value) || value['features'] === undefined) return false;
    if (!('preconfiguredCounterparties' in value) || value['preconfiguredCounterparties'] === undefined) return false;
    return true;
}

export function UiConfigFromJSON(json: any): UiConfig {
    return UiConfigFromJSONTyped(json, false);
}

export function UiConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): UiConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'features': ((json['features'] as Array<any>).map(UiConfigFeatureFromJSON)),
        'preconfiguredCounterparties': ((json['preconfiguredCounterparties'] as Array<any>).map(UiConfigPreconfiguredCounterpartyFromJSON)),
        'logoutUrl': json['logoutUrl'] == null ? undefined : json['logoutUrl'],
        'documentationUrl': json['documentationUrl'] == null ? undefined : json['documentationUrl'],
        'supportUrl': json['supportUrl'] == null ? undefined : json['supportUrl'],
        'privacyPolicyUrl': json['privacyPolicyUrl'] == null ? undefined : json['privacyPolicyUrl'],
        'legalNoticeUrl': json['legalNoticeUrl'] == null ? undefined : json['legalNoticeUrl'],
    };
}

export function UiConfigToJSON(json: any): UiConfig {
    return UiConfigToJSONTyped(json, false);
}

export function UiConfigToJSONTyped(value?: UiConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'features': ((value['features'] as Array<any>).map(UiConfigFeatureToJSON)),
        'preconfiguredCounterparties': ((value['preconfiguredCounterparties'] as Array<any>).map(UiConfigPreconfiguredCounterpartyToJSON)),
        'logoutUrl': value['logoutUrl'],
        'documentationUrl': value['documentationUrl'],
        'supportUrl': value['supportUrl'],
        'privacyPolicyUrl': value['privacyPolicyUrl'],
        'legalNoticeUrl': value['legalNoticeUrl'],
    };
}

