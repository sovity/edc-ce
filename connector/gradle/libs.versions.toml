[versions]
sovityCeGroupName = "de.sovity.edc"

# Eclipse EDC Version
edc = "0.11.1.3"

# Eclipse EDC Version for Modules not contained in our fork
edcUniverse = "0.11.1"

# Tractus-X Version
# Used for using bugfixes of the Tractus-X EDC
tractus = "0.9.0"
java = "21"

# force a lower version because this could be used on an older JVM
# (i.e. old corporate project that only gets updated when they don't have a choice)
javaForClients = "17"
kotlin = "2.1.10"
npmVersion = "8.15.0"
postgresDbImage = "postgres:17-alpine"

# Other Libraries
assertj = "3.27.3"
awaitility = "4.3.0"
bouncyCastle = "1.81"
commonsCollections = "4.5.0"
commonsIo = "2.20.0"
commonsLang = "3.18.0"
freefairLombokPlugin = "8.10"
findbugs = "3.0.2"
flexmark = "0.64.8"
flyway = "11.7.2"
flywayPlugin = "11.7.2"
gson = "2.13.1"
gsonFire = "1.9.0"
hibernateValidator = "8.0.2.Final"
jackson = "2.19.2"
jakartaAnnotation = "1.3.5"
jakartaEl = "4.0.2"
jakartaJson = "2.0.1"
jakartaRs = "3.1.0"
jakartaServletApi = "5.0.0"
jakartaValidation = "3.0.2"
javapoet = "1.13.0"
jooq = "3.19.22"
jooqPlugin = "7.2"
jooqPostgresqlJson = "4.0.0"
jsonUnit = "3.5.0"
junit = "5.11.4"
kotlinPoet = "2.2.0"
log4j = "2.25.1"
lombok = "1.18.38"
mockito = "5.18.0"
mockitoKotlin = "5.4.0"
mockk = "1.14.0"
mockserver = "5.15.0"
nimbus = "9.37.2"
okhttp = "4.12.0"
openapiGenerator = "7.10.0"
openapiJackson = "0.2.6"
postgres = "42.4.5"
restAssured = "5.5.5"
shadow = "7.1.2"
swagger = "1.6.16"
swaggerCore = "2.2.26"
taskinfo = "2.2.0"
testcontainers = "1.20.6"
titaniumLd = "1.6.0"
versions = "0.52.0"

[libraries]
edc-accesstokendataStoreSql = { module = "org.eclipse.edc:accesstokendata-store-sql", version.ref = "edc" }
edc-apiCore = { module = "org.eclipse.edc:api-core", version.ref = "edc" }
edc-apiObservability = { module = "org.eclipse.edc:api-observability", version.ref = "edc" }
edc-assetSpi = { module = "org.eclipse.edc:asset-spi", version.ref = "edc" }
edc-authSpi = { module = "org.eclipse.edc:auth-spi", version.ref = "edc" }
edc-authTokenbased = { module = "org.eclipse.edc:auth-tokenbased", version.ref = "edc" }
edc-boot = { module = "org.eclipse.edc:boot", version.ref = "edc" }
edc-bootLib = { module = "org.eclipse.edc:boot-lib", version.ref = "edc" }
edc-callbackEventDispatcher = { module = "org.eclipse.edc:callback-event-dispatcher", version.ref = "edc" }
edc-callbackHttpDispatcher = { module = "org.eclipse.edc:callback-http-dispatcher", version.ref = "edc" }
edc-callbackStaticEndpoint = { module = "org.eclipse.edc:callback-static-endpoint", version.ref = "edc" }
edc-connectorCore = { module = "org.eclipse.edc:connector-core", version.ref = "edc" }
edc-contractDefinitionApi = { module = "org.eclipse.edc:contract-definition-api", version.ref = "edc" }
edc-contractSpi = { module = "org.eclipse.edc:contract-spi", version.ref = "edc" }
edc-controlApiConfiguration = { module = "org.eclipse.edc:control-api-configuration", version.ref = "edc" }
edc-controlPlaneApi = { module = "org.eclipse.edc:control-plane-api", version.ref = "edc" }
edc-controlPlaneApiClient = { module = "org.eclipse.edc:control-plane-api-client", version.ref = "edc" }
edc-controlPlaneContract = { module = "org.eclipse.edc:control-plane-contract", version.ref = "edc" }
edc-controlPlaneCore = { module = "org.eclipse.edc:control-plane-core", version.ref = "edc" }
edc-controlPlaneSpi = { module = "org.eclipse.edc:control-plane-spi", version.ref = "edc" }
edc-controlPlaneSql = { module = "org.eclipse.edc:control-plane-sql", version.ref = "edc" }
edc-coreSpi = { module = "org.eclipse.edc:core-spi", version.ref = "edc" }
edc-dataPlaneSelectorControlApi = { module = "org.eclipse.edc:data-plane-selector-control-api", version.ref = "edc" }
edc-dataPlaneCore = { module = "org.eclipse.edc:data-plane-core", version.ref = "edc" }
edc-dataPlaneHttp = { module = "org.eclipse.edc:data-plane-http", version.ref = "edc" }
edc-dataPlaneHttpOauth2 = { module = "org.eclipse.edc:data-plane-http-oauth2", version.ref = "edc" }
edc-dataPlaneIam = { module = "org.eclipse.edc:data-plane-iam", version.ref = "edc" }
edc-dataPlaneInstanceStoreSql = { module = "org.eclipse.edc:data-plane-instance-store-sql", version.ref = "edc" }
edc-dataPlanePublicApiV2 = { module = "org.eclipse.edc:data-plane-public-api-v2", version.ref = "edc" }
edc-dataPlaneSelectorApi = { module = "org.eclipse.edc:data-plane-selector-api", version.ref = "edc" }
edc-dataPlaneSelectorCore = { module = "org.eclipse.edc:data-plane-selector-core", version.ref = "edc" }
edc-dataPlaneSignalingApi = { module = "org.eclipse.edc:data-plane-signaling-api", version.ref = "edc" }
edc-dataPlaneStoreSql = { module = "org.eclipse.edc:data-plane-store-sql", version.ref = "edc" }
edc-dsp = { module = "org.eclipse.edc:dsp", version.ref = "edc" }
edc-dspApiConfiguration = { module = "org.eclipse.edc:dsp-http-api-configuration", version.ref = "edc" }
edc-dspHttpCore = { module = "org.eclipse.edc:dsp-http-core", version.ref = "edc" }
edc-dspHttpSpi = { module = "org.eclipse.edc:dsp-http-spi", version.ref = "edc" }
edc-dspNegotiationTransform = { module = "org.eclipse.edc:dsp-negotiation-transform", version.ref = "edc" }
edc-edrIndexSql = { module = "org.eclipse.edc:edr-index-sql", version.ref = "edc" }
edc-edrStoreCore = { module = "org.eclipse.edc:edr-store-core", version.ref = "edc" }
edc-edrCacheApi = { module = "org.eclipse.edc:edr-cache-api", version.ref = "edc" }
edc-edrStoreReceiver = { module = "org.eclipse.edc:edr-store-receiver", version.ref = "edc" }
edc-http = { module = "org.eclipse.edc:http", version.ref = "edc" }
edc-httpLib = { module = "org.eclipse.edc:http-lib", version.ref = "edc" }
edc-httpSpi = { module = "org.eclipse.edc:http-spi", version.ref = "edc" }
edc-iamMock = { module = "org.eclipse.edc:iam-mock", version.ref = "edc" }
edc-identityDidCore = { module = "org.eclipse.edc:identity-did-core", version.ref = "edc" }
edc-identityDidWeb = { module = "org.eclipse.edc:identity-did-web", version.ref = "edc" }
edc-identityTrustCore = { module = "org.eclipse.edc:identity-trust-core", version.ref = "edc" }
edc-identityTrustIssuersConfiguration = { module = "org.eclipse.edc:identity-trust-issuers-configuration", version.ref = "edc" }
edc-identityTrustTransform = { module = "org.eclipse.edc:identity-trust-transform", version.ref = "edc" }
edc-jerseyMicrometer = { module = "org.eclipse.edc:jersey-micrometer", version.ref = "edc" }
edc-jerseyProviders = { module = "org.eclipse.edc:jersey-providers-lib", version.ref = "edc" }
edc-jettyCore = { module = "org.eclipse.edc:jetty-core", version.ref = "edc" }
edc-jettyMicrometer = { module = "org.eclipse.edc:jetty-micrometer", version.ref = "edc" }
edc-jsonLd = { module = "org.eclipse.edc:json-ld", version.ref = "edc" }
edc-jsonLdLib = { module = "org.eclipse.edc:json-ld-lib", version.ref = "edc" }
edc-jsonLdSpi = { module = "org.eclipse.edc:json-ld-spi", version.ref = "edc" }
edc-junit = { module = "org.eclipse.edc:junit", version.ref = "edc" }
edc-keysLib = { module = "org.eclipse.edc:keys-lib", version.ref = "edc" }
edc-managementApi = { module = "org.eclipse.edc:management-api", version.ref = "edc" }
edc-managementApiLib = { module = "org.eclipse.edc:management-api-lib", version.ref = "edc" }
edc-managementApiConfiguration = { module = "org.eclipse.edc:management-api-configuration", version.ref = "edc" }
edc-micrometerCore = { module = "org.eclipse.edc:micrometer-core", version.ref = "edc" }
edc-oauth2Core = { module = "org.eclipse.edc:oauth2-core", version.ref = "edc" }
edc-oauth2Daps = { module = "org.eclipse.edc:oauth2-daps", version.ref = "edc" }
edc-oauth2Spi = { module = "org.eclipse.edc:oauth2-spi", version.ref = "edc" }
edc-participantSpi = { module = "org.eclipse.edc:participant-spi", version.ref = "edc" }
edc-policyDefinitionApi = { module = "org.eclipse.edc:policy-definition-api", version.ref = "edc" }
edc-policyEngineSpi = { module = "org.eclipse.edc:policy-engine-spi", version.ref = "edc" }
edc-policyModel = { module = "org.eclipse.edc:policy-model", version.ref = "edc" }
edc-policyMonitorCore = { module = "org.eclipse.edc:policy-monitor-core", version.ref = "edc" }
edc-policyMonitorStoreSql = { module = "org.eclipse.edc:policy-monitor-store-sql", version.ref = "edc" }
edc-secretsApi = { module = "org.eclipse.edc:secrets-api", version.ref = "edc" }
edc-sqlCore = { module = "org.eclipse.edc:sql-core", version.ref = "edc" }
edc-sqlLib = { module = "org.eclipse.edc:sql-lib", version.ref = "edc" }
edc-sqlPoolApacheCommons = { module = "org.eclipse.edc:sql-pool-apache-commons", version.ref = "edc" }
edc-tokenCore = { module = "org.eclipse.edc:token-core", version.ref = "edc" }
edc-transactionLocal = { module = "org.eclipse.edc:transaction-local", version.ref = "edc" }
edc-transferDataPlaneSignaling = { module = "org.eclipse.edc:transfer-data-plane-signaling", version.ref = "edc" }
edc-transferProcessApi = { module = "org.eclipse.edc:transfer-process-api", version.ref = "edc" }
edc-transferPullHttpDynamicReceiver = { module = "org.eclipse.edc:transfer-pull-http-dynamic-receiver", version.ref = "edc" }
edc-transferSpi = { module = "org.eclipse.edc:transfer-spi", version.ref = "edc" }
edc-transformLib = { module = "org.eclipse.edc:transform-lib", version.ref = "edc" }
edc-transformSpi = { module = "org.eclipse.edc:transform-spi", version.ref = "edc" }
edc-validatorDataAddressHttpData = { module = "org.eclipse.edc:validator-data-address-http-data", version.ref = "edc" }
edc-vaultHashicorp = { module = "org.eclipse.edc:vault-hashicorp", version.ref = "edc" }
edc-aws-dataPlaneAwsS3 = { module = "org.eclipse.edc.aws:data-plane-aws-s3", version.ref = "edcUniverse" }
edc-azure-dataPlaneAzureStorage = { module = "org.eclipse.edc.azure:data-plane-azure-storage", version.ref = "edcUniverse" }
edc-azure-provisionBlob = { module = "org.eclipse.edc.azure:provision-blob", version.ref = "edcUniverse" }
edc-azure-vaultAzure = { module = "org.eclipse.edc.azure:vault-azure", version.ref = "edcUniverse" }
tractus-bdrsClient = { module = "org.eclipse.tractusx.edc:bdrs-client", version.ref = "tractus" }
tractus-bpnValidation = { module = "org.eclipse.tractusx.edc:bpn-validation", version.ref = "tractus" }
tractus-businessPartnerStoreSql = { module = "org.eclipse.tractusx.edc:business-partner-store-sql", version.ref = "tractus" }
tractus-cxPolicy = { module = "org.eclipse.tractusx.edc:cx-policy", version.ref = "tractus" }
tractus-dataFlowPropertiesProvider = { module = "org.eclipse.tractusx.edc:data-flow-properties-provider", version.ref = "tractus" }
tractus-edcDataplaneProxyConsumerApi = { module = "org.eclipse.tractusx.edc:edc-dataplane-proxy-consumer-api", version.ref = "tractus" }
tractus-edrApiV2 = { module = "org.eclipse.tractusx.edc:edr-api-v2", version.ref = "tractus" }
tractus-edrCallback = { module = "org.eclipse.tractusx.edc:edr-callback", version.ref = "tractus" }
tractus-edrCore = { module = "org.eclipse.tractusx.edc:edr-core", version.ref = "tractus" }
tractus-edrIndexLockSql = { module = "org.eclipse.tractusx.edc:edr-index-lock-sql", version.ref = "tractus" }
tractus-edrSpi = { module = "org.eclipse.tractusx.edc:edr-spi", version.ref = "tractus" }
tractus-jsonLdCore = { module = "org.eclipse.tractusx.edc:json-ld-core", version.ref = "tractus" }
tractus-provisionAdditionalHeaders = { module = "org.eclipse.tractusx.edc:provision-additional-headers", version.ref = "tractus" }
tractus-retirementEvaluationApi = { module = "org.eclipse.tractusx.edc:retirement-evaluation-api", version.ref = "tractus" }
tractus-retirementEvaluationCore = { module = "org.eclipse.tractusx.edc:retirement-evaluation-core", version.ref = "tractus" }
tractus-retirementEvaluationSpi = { module = "org.eclipse.tractusx.edc:retirement-evaluation-spi", version.ref = "tractus" }
tractus-retirementEvaluationStoreSql = { module = "org.eclipse.tractusx.edc:retirement-evaluation-store-sql", version.ref = "tractus" }
tractus-tokenRefreshApi = { module = "org.eclipse.tractusx.edc:token-refresh-api", version.ref = "tractus" }
tractus-tokenRefreshCore = { module = "org.eclipse.tractusx.edc:token-refresh-core", version.ref = "tractus" }
tractus-tokenrefreshHandler = { module = "org.eclipse.tractusx.edc:tokenrefresh-handler", version.ref = "tractus" }
tractus-txDcp = { module = "org.eclipse.tractusx.edc:tx-dcp", version.ref = "tractus" }
tractus-txDcpStsDim = { module = "org.eclipse.tractusx.edc:tx-dcp-sts-dim", version.ref = "tractus" }
apache-commonsCollections = { module = "org.apache.commons:commons-collections4", version.ref = "commonsCollections" }
apache-commonsIo = { module = "commons-io:commons-io", version.ref = "commonsIo" }
apache-commonsLang = { module = "org.apache.commons:commons-lang3", version.ref = "commonsLang" }
apicatalog-titaniumJsonLd = { module = "com.apicatalog:titanium-json-ld", version.ref = "titaniumLd" }
bouncyCastle-bcprovJdk18on = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncyCastle" }
bouncyCastle-bcpkixJdk18on = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncyCastle" }
findbugs-jsr305 = { module = "com.google.code.findbugs:jsr305", version.ref = "findbugs" }
flexmark-all = { module = "com.vladsch.flexmark:flexmark-all", version.ref = "flexmark" }
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-postgres = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
gsonFire = { module = "io.gsonfire:gson-fire", version.ref = "gsonFire" }
hibernate-validation = { module = "org.hibernate.validator:hibernate-validator", version.ref = "hibernateValidator" }
jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jakarta-annotationApi = { module = "jakarta.annotation:jakarta.annotation-api", version.ref = "jakartaAnnotation" }
jakarta-el = { module = "org.glassfish:jakarta.el", version.ref = "jakartaEl" }
jakarta-json = { module = "org.glassfish:jakarta.json", version.ref = "jakartaJson" }
jakarta-rsApi = { module = "jakarta.ws.rs:jakarta.ws.rs-api", version.ref = "jakartaRs" }
jakarta-servletApi = { module = "jakarta.servlet:jakarta.servlet-api", version.ref = "jakartaServletApi" }
jakarta-validationApi = { module = "jakarta.validation:jakarta.validation-api", version.ref = "jakartaValidation" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-jul = { module = "org.apache.logging.log4j:log4j-jul", version.ref = "log4j" }
log4j-layoutTemplateJson = { module = "org.apache.logging.log4j:log4j-layout-template-json", version.ref = "log4j" }
jooq-jooq = { module = "org.jooq:jooq", version.ref = "jooq" }
lombok = { module = "org.projectlombok:lombok", version.ref = "lombok" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
nimbus-joseJwt = { module = "com.nimbusds:nimbus-jose-jwt", version.ref = "nimbus" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
openapi-jacksonDatabindNullable = { module = "org.openapitools:jackson-databind-nullable", version.ref = "openapiJackson" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
squareup-javapoet = { module = "com.squareup:javapoet", version.ref = "javapoet" }
squareup-kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
swagger-annotations = { module = "io.swagger:swagger-annotations", version.ref = "swagger" }
swagger-annotationsJakarta = { module = "io.swagger.core.v3:swagger-annotations-jakarta", version.ref = "swaggerCore" }
swagger-jaxrs2Jakarta = { module = "io.swagger.core.v3:swagger-jaxrs2-jakarta", version.ref = "swaggerCore" }
t9tJooq-jooqPostgresqlJson = { module = "com.github.t9t.jooq:jooq-postgresql-json", version.ref = "jooqPostgresqlJson" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
assertj-core = { module = "org.assertj:assertj-core", version.ref = "assertj" }
awaitility-java = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
jsonUnit-assertj = { module = "net.javacrumbs.json-unit:json-unit-assertj", version.ref = "jsonUnit" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
mockito-junitJupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
mockserver-netty = { module = "org.mock-server:mockserver-netty", version.ref = "mockserver" }
restAssured-restAssured = { module = "io.rest-assured:rest-assured", version.ref = "restAssured" }

[bundles]
testUtils = [
  "assertj-core",
  "awaitility-java",
  "junit-api",
  "junit-engine",
  "junit-params",
  "jsonUnit-assertj",
  "mockito-core",
  "mockito-kotlin",
  "mockito-junitJupiter",
  "mockk",
  "mockserver-netty",
  "restAssured-restAssured"
]

[plugins]
flyway = { id = "org.flywaydb.flyway", version.ref = "flywayPlugin" }
freefair-lombok = { id = "io.freefair.lombok", version.ref = "freefairLombokPlugin" }
jooq = { id = "nu.studer.jooq", version.ref = "jooqPlugin" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapiGenerator" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
swagger-plugin = { id = "io.swagger.core.v3.swagger-gradle-plugin", version.ref = "swaggerCore" }
taskinfo = { id = "org.barfuin.gradle.taskinfo", version.ref = "taskinfo" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
